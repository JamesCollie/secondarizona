'++LotusScript Development Environment:2:5:(Options):0:74
%REM
	Library ClientAgentLogger
	Created Feb 21, 2013 by James Collie/Office/HealthSpace
	Description: This is a set of things to make the calls to AgentLogger, which we normally use for scheduled agents, work with notes mail log
%END REM
Option Public
Option Declare


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class AgentLogger

'++LotusScript Development Environment:2:5:(Declarations):0:10
'=======================================================================
'ATTENTION!!!! Every time this is updated you MUST increment the log versions! No exceptions!
'since the number is actually a real number, and we want it different but related to the version of AgentLogger that we are mimicing, 
'		use the format n.nx, where n.n matches AgentLogger, and x is the revisions of that, starting at 1
'=======================================================================
Const AgentLoggerVersion = 2.41
'2.4.0 JBC first draft

Class AgentLogger
	Public LogDocument As NotesLog
	Private LogSession As NotesSession
	Private LogDatabase As NotesDatabase 'in AgentLogger, this is the agent log db, but here it's session.currentdb
	Private DefaultTextStyle As NotesRichTextStyle
	Public CountDocsRead As Long
	Public CountDocsAdded As Long
	Public CountDocsModified As Long
	Public CountDocsDeleted As Long
	Private StartTime As NotesDateTime
	Private HasWarning As Boolean
	
	'This is the class' constructor
	Public Sub New( Session As NotesSession, Author As String, Description As String, Temporary As Boolean )
		'Initialize variables
		Set LogSession = Session
		CountDocsRead = 0
		CountDocsAdded = 0
		CountDocsModified = 0
		CountDocsDeleted = 0
		HasWarning = False
		
		'Determine server to use. This gets around a bug introduced in domino 6
		Dim Server As String
		If Session.IsOnServer Then
			Server = ""
		Else
			Server = Session.CurrentDatabase.Server
		End If
		
		Set LogDatabase = LogSession.Currentdatabase
		
		'Create a new document representing an agent run
		Set LogDocument = New NotesLog( Description )
		Call LogDocument.OpenMailLog( session.Username,"Agent Log of " & Description)
		LogDocument.LogAction "These results can be ignored and deleted if you are not interested. Most of the info here is not very exciting."
		LogDocument.LogAction "Keep this email if you get errors and want to discuss them with HealthSpace."
		
		'Prepare and log instance details about the agent run
		Dim AgentDatabase As NotesDatabase
		Set AgentDatabase = LogSession.CurrentDatabase
		LogDocument.LogAction " "
		LogDocument.LogAction "Username: " & LogSession.Commonusername
		LogDocument.LogAction "Database name: " & AgentDatabase.Title
		LogDocument.LogAction "Database file: " & AgentDatabase.FilePath
		If AgentDatabase.Server = "" Then
			LogDocument.LogAction "Server: Local"
		Else
			LogDocument.LogAction "Server: " & AgentDatabase.Server
		End If
		
		Dim Agent As NotesAgent
		Set Agent = LogSession.CurrentAgent
		If Agent Is Nothing Then
			LogDocument.LogAction "Agent: " & "not a real agent " & Description
			LogDocument.LogAction "Agent owner: " & "not a real agent " & Author
		Else
			LogDocument.LogAction "Agent: " & Agent.Name
			LogDocument.LogAction "Agent owner: " & Agent.Owner
			LogDocument.LogAction "Agent description: " & Description
			LogDocument.LogAction "Agent author: " & Author
		End If
		LogDocument.LogAction " "
		Set StartTime = New NotesDateTime( Now )
		LogDocument.LogAction "Logger version " & AgentLoggerVersion & " started at " & Format( StartTime.lslocaltime, "ddmmmyyyy hh:mm" )
		LogDocument.LogAction " "
				
	End Sub
	
	'This is the class' destructor
	Public Sub Delete
		Dim endtime As New NotesDateTime( Now )
		If Not LogDocument Is Nothing Then
			LogDocument.LogAction "Docs Read: " & CountDocsRead
			LogDocument.LogAction "Docs Modified : " & CountDocsModified
			LogDocument.LogAction "Docs Added: " & CountDocsAdded
			LogDocument.LogAction "Docs Deleted: " & CountDocsDeleted
			LogDocument.LogAction "Total run time: " & endtime.Timedifference(StartTime)
			LogDocument.LogAction "End Time: " & Format( Now, "ddmmmyyyy hh:mm" )
						
			Call LogDocument.Close
		End If
	End Sub
	
	'Records a runtime message to the agent log
	Public Sub Log( Message As String, Save As Boolean )
		LogDocument.LogAction Message
	End Sub
	
	'Records a runtime warning message to the agent log
	Public Sub LogWarning( Message As String, Save As Boolean )
		LogDocument.LogAction "Warning: " & Message
		HasWarning = True
	End Sub
	
	'Record that the agent encountered an unhandled error
	Public Sub Error
		If Not LogDocument Is Nothing Then
			LogDocument.LogAction " " 
			'Log final message
			LogDocument.LogAction "Agent failed (with internal notes error)."
			
			'Log error data
			LogDocument.LogAction "Error: " & Error
			LogDocument.LogAction "Error Code: " & Err
			LogDocument.LogAction "Error line: " & Erl
		End If
	End Sub
	
	'Record that the agent completed successfully
	Public Sub Success
		If Not LogDocument Is Nothing Then
			LogDocument.LogAction " " 
			If HasWarning Then
				LogDocument.LogAction "Agent completed successfully (with warnings)."
			Else
				LogDocument.LogAction "Agent completed successfully."
			End If
		End If
	End Sub
	
	'Record that the agent encountered a handled error
	Public Sub Failure( Message As String )
		If Not LogDocument Is Nothing Then
			LogDocument.LogAction " " 
			'Log final message
			LogDocument.LogAction "Agent failed (with custom error)."
			
			'Log error data
			LogDocument.LogAction "Custom Error: " & Message
		End If
	End Sub
	
	'Adds a document link to the agent log
	Public Sub AddLink( Document As Variant )
		'nope, not doing it!
	End Sub
	
	'Increment read document count
	Public Sub IncrementDocumentsRead
		CountDocsRead = CountDocsRead + 1
	End Sub
	
	'Increment added document count
	Public Sub IncrementDocumentsAdded
		CountDocsAdded = CountDocsAdded + 1
	End Sub
	
	'Increment modified document count
	Public Sub IncrementDocumentsModified
		CountDocsModified = CountDocsModified + 1
	End Sub
	
	'Increment deleted document count
	Public Sub IncrementDocumentsDeleted
		CountDocsDeleted = CountDocsDeleted + 1
	End Sub
	
	Public Sub TaskLink( TicketID As String )		
		'not doing it!!!
	End Sub
	
	Public Sub AddField( FldName As String, NewValue As Variant )
		If Not LogDocument Is Nothing Then
			LogDocument.LogAction "Field " & FldName & ": " & NewValue
		End If
	End Sub
	
End Class