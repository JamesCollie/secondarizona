'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Declare


'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Class FieldCollection
Declare Sub SaferAppendToTextList( Fld As NotesItem, NewValue As Variant )

'++LotusScript Development Environment:2:5:(Declarations):0:10
Class FieldCollection
	Public Fields() As NotesItem
	Public NumFields As Integer
	Public NumRows As Integer
	
	
	Public Sub New( Doc As NotesDocument, FieldNames As Variant )
		Dim Field As NotesItem
		
		Forall FieldName In FieldNames
			If Doc.HasItem( FieldName ) Then
				Set Field = Doc.GetFirstItem( FieldName )
				If field.Type = 1280 Then
					Dim arr () As String
					Redim arr (Ubound(field.Values)) As String
					Dim i As Integer
					i = 0
					Forall t In field.Values
						arr(i) = t
						i = i + 1
					End Forall
					field.Values = arr
				End If
			Else
				Set Field = New NotesItem( Doc, FieldName, "" )
				Field.IsSummary = True
			End If
			Redim Preserve Fields( NumFields ) 'could do this in a separate loop to avoid cost of redim preserve
			Set Fields( NumFields ) = Field
			NumFields = NumFields + 1
		End Forall
		NumRows = CountRows
	End Sub
	
	
	Public Sub AppendRow( NewValues As Variant )
		Dim Field As NotesItem
		Dim Counter As Integer
		
		Forall FieldValue In NewValues
			Set Field = Fields( Counter )
			SaferAppendToTextList Field, FieldValue 
			Counter = Counter + 1
		End Forall
		NumRows = CountRows
	End Sub
	
	
	Public Sub RemoveRow( KeyValue As String )
		Dim KeyPos As Integer
		Dim FieldValues As Variant
		Dim Counter As Integer
		
		If KeyValue = "" Then 'remove the last row
			Forall Field In Fields
				FieldValues = Field.Values
				If NumRows > 1 Then
					Redim Preserve  FieldValues ( Ubound( FieldValues ) - 1 )
				Else
					FieldValues = "" 'can't redim it to no elements
				End If
				Field.Values = FieldValues
			End Forall
		Else 'remove the key row
			KeyPos = FindKeyPosition( KeyValue )
			Redim FieldValues( NumFields - 2 )
			Forall Field In Fields
				FieldValues = Field.Values
				Field.Values = ""
				Counter = 0
				Forall OldValue In FieldValues
					If Counter <> KeyPos Then
						SaferAppendToTextList Field, OldValue 
					End If
					Counter = Counter + 1
				End Forall
			End Forall
		End If
		NumRows = CountRows
	End Sub
	
	
	Public Sub ReplaceRow( KeyValue As String, NewValues As Variant )
		Dim FieldValues As Variant
		Dim KeyPos As Integer
		Dim Counter As Integer
		
		KeyPos = FindKeyPosition( KeyValue )
		Forall NewValue In NewValues
			FieldValues = Fields( Counter ).Values
			FieldValues(KeyPos) = NewValue
			Fields(Counter).Values = FieldValues
			Counter = Counter + 1
		End Forall
		NumRows = CountRows
	End Sub
	
	
	Public Function GetRow( KeyValue As String ) As Variant
		Dim ReturnValue() As String
		Dim FieldNumber As Integer
		Dim KeyPos As Integer
		
		Redim ReturnValue( NumFields - 1 ) As String
		KeyPos = FindKeyPosition( KeyValue )
		If Not( KeyPos = -1 ) Then
			For FieldNumber = 0 To NumFields - 1
				ReturnValue( FieldNumber ) = Fields( FieldNumber ).Values( KeyPos )
			Next
		End If
		GetRow = ReturnValue
	End Function
	
	
	Public Function GetNthRow( Byval KeyPos As Integer ) As Variant
		Dim ReturnValue() As String
		Redim ReturnValue( NumFields - 1 ) As String
		Dim FieldNumber As Integer
		
		If KeyPos > 0 And KeyPos <= CountRows Then
			KeyPos = KeyPos - 1
			For FieldNumber = 0 To NumFields - 1
				ReturnValue( FieldNumber ) = Fields( FieldNumber ).Values( KeyPos )
			Next
		End If
		GetNthRow = ReturnValue
	End Function
	
	
	Private Function CountRows As Integer
		'just count the values in the first field for now, can check that it matches other fields later if need be
		CountRows = Ubound( Fields(0).Values ) + 1 'don't count from zero, and even original blanks count as values
	End Function
	
	
	Private Function FindKeyPosition( KeyValue As String ) As Integer
		Dim Counter As Integer
		Dim FoundKey As Variant
		
		Forall FieldValue In Fields(0).Values
			If FieldValue = KeyValue Then
				FindKeyPosition = Counter
				FoundKey = True
			Else
				Counter = Counter + 1
			End If
		End Forall
		If Not FoundKey Then
			FindKeyPosition = -1
		End If
	End Function
End Class
'++LotusScript Development Environment:2:2:SaferAppendToTextList:1:8
Sub SaferAppendToTextList( Fld As NotesItem, NewValue As Variant )
	Dim arr () As Variant
	Redim arr (Ubound(Fld.Values)+1) As Variant
	Dim i As Integer
	
	Forall v In Fld.Values
		arr(i) = v
		i = i + 1
	End Forall
	arr(i) = NewValue
	Fld.Values = arr
End Sub