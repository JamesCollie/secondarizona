'++LotusScript Development Environment:2:5:(Options):0:74
Option Public
Option Explicit






'++LotusScript Development Environment:2:5:(Forward):0:1
Declare Type NET_CONTROL_BLOCK 'NCB
Declare Type ADAPTER_STATUS
Declare Type NAME_BUFFER
Declare Type ASTAT
Declare Public Class Internet
Declare Public Function IsNetConnectViaLAN() As Integer
Declare Public Function IsNetConnectViaModem() As Integer
Declare Public Function IsNetConnectViaProxy() As Integer
Declare Public Function IsNetConnectOnline() As Integer
Declare Public Function IsNetRASInstalled() As Integer
Declare Private Sub GetIPHostInfo(mvarHostName As String, mvarIPNumber As String)
Declare Function GetMACAddress() As String

'++LotusScript Development Environment:2:5:(Declarations):0:10
Declare Function InternetGetConnectedState Lib "wininet.dll" (lpdwFlags As Long, Byval dwReserved As Long) As Long

Const INTERNET_CONNECTION_MODEM = &H1

' Local system uses a LAN to connect to the Internet.
Const INTERNET_CONNECTION_LAN = &H2

' Local system uses a proxy server to connect to the Internet.
Const INTERNET_CONNECTION_PROXY = &H4

' No longer used!
Const INTERNET_CONNECTION_MODEM_BUSY = &H8

Const INTERNET_RAS_INSTALLED = &H10
Const INTERNET_CONNECTION_OFFLINE = &H20
Const INTERNET_CONNECTION_CONFIGURED = &H40

Const NCBASTAT = &H33
Const NCBNAMSZ = 16
Const HEAP_ZERO_MEMORY = &H8
Const HEAP_GENERATE_EXCEPTIONS = &H4
Const NCBRESET = &H32

Type NET_CONTROL_BLOCK 'NCB
'ncb_command As Byte
'ncb_retcode As Byte
'ncb_lsn As Byte
'ncb_num As Byte
	
	ncb_command As Integer
' ncb_retcode As Long
	ncb_lsn As Integer
' ncb_num As Long
	
	ncb_buffer As Long
	ncb_length As Integer
	ncb_callname As String * NCBNAMSZ
	ncb_name As String * NCBNAMSZ
	ncb_post As Long
	
'ncb_rto As Byte
'ncb_sto As Byte 
'ncb_lana_num As Byte
'ncb_cmd_cplt As Byte
'ncb_reserve(9) As Byte ' Reserved, must be 0
	
	ncb_rto As Integer
' ncb_sto As Long 
	ncb_lana_num As Integer
' ncb_cmd_cplt As Long
	ncb_reserve(1) As Long ' Reserved, must be 0
	ncb_reserve2 As Integer
	
	ncb_event As Long
End Type
Type ADAPTER_STATUS
'adapter_address(5) As Byte
	adapter_address(2) As Integer
	
'rev_major As Byte
'reserved0 As Byte
'adapter_type As Byte
'rev_minor As Byte
	
	rev_major As Integer
' reserved0 As Long
	adapter_type As Integer
' rev_minor As Long
	
	duration As Integer
	frmr_recv As Integer
	frmr_xmit As Integer
	iframe_recv_err As Integer
	xmit_aborts As Integer
	xmit_success As Long
	recv_success As Long
	iframe_xmit_err As Integer
	recv_buff_unavail As Integer
	t1_timeouts As Integer
	ti_timeouts As Integer
	Reserved1 As Long
	free_ncbs As Integer
	max_cfg_ncbs As Integer
	max_ncbs As Integer
	xmit_buf_unavail As Integer
	max_dgram_size As Integer
	pending_sess As Integer
	max_cfg_sess As Integer
	max_sess As Integer
	max_sess_pkt_size As Integer
	name_count As Integer
End Type
Type NAME_BUFFER
	name As String * NCBNAMSZ
	name_num As Integer
	name_flags As Integer
End Type
Type ASTAT
	adapt As ADAPTER_STATUS
	NameBuff(30) As NAME_BUFFER
End Type


Declare Function Netbios Lib "netapi32.dll" (pncb As NET_CONTROL_BLOCK) As Long
Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (hpvDest As Any, Byval hpvSource As Long, Byval cbCopy As Long)
Declare Function GetProcessHeap Lib "kernel32" () As Long
Declare Function HeapAlloc Lib "kernel32" (Byval hHeap As Long, Byval dwFlags As Long,Byval dwBytes As Long) As Long
Declare Function HeapFree Lib "kernel32" (Byval hHeap As Long, Byval dwFlags As Long, lpMem As Any) As Long

Public Class Internet
	mvarIsLAN As Integer
	mvarIsModem As Integer
	mvarIsProxy As Integer
	mvarIsOnline As Integer
	mvarIsRAS As Integer
	mvarMACAddress As String
	
	Public Sub New()
		mvarIsLAN = IsNetConnectViaLAN
		mvarIsModem = IsNetConnectViaModem
		mvarIsProxy = IsNetConnectViaProxy
		mvarIsOnline = IsNetConnectOnline
		mvarIsRAS = IsNetRASInstalled
		mvarMACAddress = GetMACAddress
	End Sub
	Public Property Get MACAddress As String
		MACAddress = mvarMACAddress
	End Property
	Public Property Get LAN As Integer
		If mvarIsLan > 0 Then
			LAN = 1
		Else
			LAN = 0
		End If
	End Property
	Public Property Get Modem As Integer
		If mvarIsModem > 0 Then
			Modem = 1
		Else
			Modem = 0
		End If
	End Property
	Public Property Get Proxy As Integer
		If mvarIsProxy > 0 Then
			Proxy = 1
		Else
			Proxy = 0
		End If
	End Property
	Public Property Get Online As Integer
		If mvarIsOnline > 0 Then
			Online = 1
		Else
			Online = 0
		End If
	End Property
	Public Property Get RASInstalled As Integer
		If mvarIsRAS > 0 Then
			RASInstalled = 1
		Else
			RASInstalled = 0
		End If
	End Property
	
End Class
'++LotusScript Development Environment:2:1:IsNetConnectViaLAN:1:8
Public Function IsNetConnectViaLAN() As Integer
	Dim dwflags As Long
	
	Call InternetGetConnectedState(dwflags, 0&)
	IsNetConnectViaLAN = dwflags And INTERNET_CONNECTION_LAN
	
End Function
'++LotusScript Development Environment:2:1:IsNetConnectViaModem:1:8
Public Function IsNetConnectViaModem() As Integer
	Dim dwflags As Long
	
	Call InternetGetConnectedState(dwflags, 0&)
	IsNetConnectViaModem = dwflags And INTERNET_CONNECTION_MODEM
	
End Function
'++LotusScript Development Environment:2:1:IsNetConnectViaProxy:1:8
Public Function IsNetConnectViaProxy() As Integer
	Dim dwflags As Long
	
	Call InternetGetConnectedState(dwflags, 0&)
	IsNetConnectViaProxy = dwflags And INTERNET_CONNECTION_PROXY
	
End Function
'++LotusScript Development Environment:2:1:IsNetConnectOnline:1:8
Public Function IsNetConnectOnline() As Integer
	
	IsNetConnectOnline = InternetGetConnectedState(0&, 0&)
	
End Function
'++LotusScript Development Environment:2:1:IsNetRASInstalled:1:8
Public Function IsNetRASInstalled() As Integer
	Dim dwflags As Long
	
	Call InternetGetConnectedState(dwflags, 0&)
	IsNetRASInstalled = dwflags And INTERNET_RAS_INSTALLED
	
End Function
'++LotusScript Development Environment:2:2:GetIPHostInfo:1:8
Private Sub GetIPHostInfo(mvarHostName As String, mvarIPNumber As String)
	' can not retreive theese values since it requires to work with byte variables.
	' that is not possible in LS R5.
	'mvarHostName = GetIPHostName
	'mvarIPNumber = GetIPAddress
End Sub
'++LotusScript Development Environment:2:1:GetMACAddress:1:8
Function GetMACAddress() As String
	
'retrieve the MAC Address for the network controller installed, returning a formatted string
	
%REM
Eric suggests we use CoCreateGuid instead of netbios
#include <windows.h>
#include <iostream>
#include <conio.h>

using namespace std;

int main()
{
    cout << "MAC address is: ";

    // Ask COM to create a UUID for us.  If this machine has an Ethernet
    // adapter, the last six bytes of the UUID (bytes 2-7 inclusive in
    // the Data4 element) should be the MAC address of the local
    // Ethernet adapter.
    GUID uuid;
    CoCreateGuid(&uuid);
    // Spit the address out
    char mac_addr[18];
    sprintf(mac_addr,"%02X:%02X:%02X:%02X:%02X:%02X",
            uuid.Data4[2],uuid.Data4[3],uuid.Data4[4],
            uuid.Data4[5],uuid.Data4[6],uuid.Data4[7]);
    cout << mac_addr << endl;
    getch();
    return 0;
}
%END REM
	
	Dim tmp As String
	Dim tmpX As String
	Dim pASTAT As Long
	Dim NCB As NET_CONTROL_BLOCK
	Dim AST As ASTAT
	Dim h1 As String
	Dim h2 As String
	Dim h3 As String
	
'The IBM NetBIOS 3.0 specifications defines four basic
'NetBIOS environments under the NCBRESET command. Win32
'follows the OS/2 Dynamic Link Routine (DLR) environment.
'This means that the first NCB issued by an application
'must be a NCBRESET, with the exception of NCBENUM.
'The Windows NT implementation differs from the IBM
'NetBIOS 3.0 specifications in the NCB_CALLNAME field.
	NCB.ncb_command = NCBRESET
	Call Netbios(NCB)
	
'To get the Media Access Control (MAC) address for an
'ethernet adapter programmatically, use the Netbios()
'NCBASTAT command and provide a "*" as the name in the
'NCB.ncb_CallName field (in a 16-chr string).
	NCB.ncb_callname = "* "
	NCB.ncb_command = NCBASTAT
	
'For machines with multiple network adapters you need to
'enumerate the LANA numbers and perform the NCBASTAT
'command on each. Even when you have a single network
'adapter, it is a good idea to enumerate valid LANA numbers
'first and perform the NCBASTAT on one of the valid LANA
'numbers. It is considered bad programming to hardcode the
'LANA number to 0 (see the comments section below).
	NCB.ncb_lana_num = 0
	NCB.ncb_length = Len(AST)
	
	pASTAT = HeapAlloc(GetProcessHeap(), HEAP_GENERATE_EXCEPTIONS Or HEAP_ZERO_MEMORY, NCB.ncb_length)
	
	If pASTAT = 0 Then
		Print "memory allocation failed!"
		Exit Function
	End If
	
	NCB.ncb_buffer = pASTAT
	Call Netbios(NCB)
	
	Dim temp As Long
	temp = Len(AST)
	
	CopyMemory AST, NCB.ncb_buffer, Len(AST)
	
	' Changed 2002-07-08 due to a bug...
	h1 = Right( ("000" + Hex$( AST.adapt.adapter_address(0) ) ) , 4 ) 
	h2 = Right( ("000" + Hex$( AST.adapt.adapter_address(1) ) ) , 4 ) 
	h3 = Right( ("000" + Hex$( AST.adapt.adapter_address(2) ) ) , 4 ) 
	
	If tmpX = "0" Then 
		tmp = "00-00-" & Right( h2 , 2 ) & "-" & Left( h2 , 2 ) & "-" & Right( h3 , 2 ) & "-" & Left( h3 , 2 )     
	Else 
		tmp = Right( h1 , 2 ) & "-" & Left( h1 , 2 ) & "-" &  Right( h2 , 2 ) & "-" & Left( h2 , 2 ) & "-" & Right( h3 , 2 ) & "-" & Left( h3 , 2 ) 
	End If
	' --- end change 2002-07-08
	
	HeapFree GetProcessHeap(), 0, pASTAT
	
	GetMACAddress = tmp
	
End Function 