<?xml version='1.0' encoding='utf-8'?>
<note class='filter' xmlns='http://www.lotus.com/dxl' version='9.0' maintenanceversion='1.0'
 replicaid='88257B650066CF74'>
<noteinfo noteid='6fe' unid='F78C4828EF53BF7C88257B220003B96E' sequence='3'>
<created><datetime>20130301T164040,78-08</datetime></created>
<modified><datetime dst='true'>20130508T114303,91-07</datetime></modified>
<revised><datetime>20130301T164042,99-08</datetime></revised>
<lastaccessed><datetime dst='true'>20130508T114303,91-07</datetime></lastaccessed>
<addedtofile><datetime dst='true'>20130508T114303,91-07</datetime></addedtofile></noteinfo>
<updatedby><name>CN=HS Agent/OU=Service/O=HealthSpace</name></updatedby>
<item name='$TITLE' sign='true'><text>Database\Update Violations|UpdateViolations</text></item>
<item name='$Comment'><text>AGLG-948NZP Violations section folder Unable to launch DXL 01Mar2013 JCOE-94LMTP</text></item>
<item name='$DesignerVersion'><text>8.5.3</text></item>
<item name='$OnBehalfOf' sign='true'><text>CN=HS Agent/OU=Service/O=HealthSpace</text></item>
<item name='$Restricted' sign='true'><number>1</number></item>
<item name='$AssistVersion'><datetime>20130301T164040,82-08</datetime></item>
<item name='$AssistTrigger'><text>4</text></item>
<item name='$AssistAction' sign='true'>
<rawitemdata type='10'>
gQKF/yRkAAAAABhkAAAnKytMb3R1c1NjcmlwdCBEZXZlbG9wbWVudCBFbnZpcm9ubWVudDoyOjU6
KE9wdGlvbnMpOjA6NjYKT3B0aW9uIFB1YmxpYwpPcHRpb24gRGVjbGFyZQondGhpcyBpcyBNci4g
TWlrZSBWb2d0J3MgcmVtYXJrIDAxTWFyMTMgMTY6NDAKCidub3QgaW4gdGhpcyB2ZXJzaW9uISBV
c2UgIkFnZW50TG9nZ2VyIgpVc2UgIkNsaWVudEFnZW50TG9nZ2VyIgpVc2UgIlN0YXR1c0JhciIK
VXNlICJHZW5lcmFsIgoKJysrTG90dXNTY3JpcHQgRGV2ZWxvcG1lbnQgRW52aXJvbm1lbnQ6Mjo1
OihGb3J3YXJkKTowOjEKRGVjbGFyZSBTdWIgSW5pdGlhbGl6ZQpEZWNsYXJlIFByaXZhdGUgRnVu
Y3Rpb24gTWFrZU5ld2RvYyggVHJndERiIEFzIE5vdGVzRGF0YWJhc2UsIFNyYyBBcyBOb3Rlc0Rv
Y3VtZW50LCB5ZWxsb3cgQXMgQWdlbnRMb2dnZXIsIGxldmVsIEFzIEludGVnZXIgKSBBcyBOb3Rl
c0RvY3VtZW50CkRlY2xhcmUgUHJpdmF0ZSBGdW5jdGlvbiBDaGVja0ZvckR1cGxpY2F0ZXMoIExp
dmVEYiBBcyBOb3Rlc0RhdGFiYXNlLCBhbG9nIEFzIEFnZW50TG9nZ2VyICkKRGVjbGFyZSBQcml2
YXRlIEZ1bmN0aW9uIEF0dGFjaFRvUGFyZW50KCBzcmMgQXMgTm90ZXNEb2N1bWVudCwgZGVzdCBB
cyBOb3Rlc0RvY3VtZW50LCBhZ2xnIEFzIEFnZW50TG9nZ2VyLCBsZXZlbCBBcyBJbnRlZ2VyICkg
QXMgQm9vbGVhbgpEZWNsYXJlIFByaXZhdGUgRnVuY3Rpb24gQ29weURvY3MoIFNvdXJjZVZpb2xE
YiBBcyBOb3Rlc0RhdGFiYXNlLCBUYXJnZXRFSFNkYiBBcyBOb3Rlc0RhdGFiYXNlLCBhbG9nIEFz
IEFnZW50TG9nZ2VyICkgQXMgTG9uZwpEZWNsYXJlIFByaXZhdGUgRnVuY3Rpb24gR2V0RG9jQnlJ
RChEQiBBcyBOb3Rlc0RhdGFiYXNlLCBEb2NJRCBBcyBTdHJpbmcsIEZvcm1OYW1lIEFzIFN0cmlu
ZywgYXNkZiBBcyBBZ2VudExvZ2dlcikgQXMgTm90ZXNEb2N1bWVudApEZWNsYXJlIFByaXZhdGUg
U3ViIERlbGV0ZVN0YWxlRm9sZGVycyggZGIgQXMgTm90ZXNEYXRhYmFzZSwgYWxnIEFzIEFnZW50
TG9nZ2VyICkKRGVjbGFyZSBQcml2YXRlIEZ1bmN0aW9uIE9wZW5EYkJ5UmVwSWQoIFNlcnZlciBB
cyBTdHJpbmcsIHJlcGlkIEFzIFN0cmluZywgbGcgQXMgQWdlbnRMb2dnZXIgKSBBcyAgTm90ZXNE
YXRhYmFzZQpEZWNsYXJlIFByaXZhdGUgRnVuY3Rpb24gVXBkYXRlT25lKCBTcmNEb2MgQXMgTm90
ZXNEb2N1bWVudCwgTG9va3VwRG9jSUQgQXMgTm90ZXNWaWV3LCBhbG9nIEFzIEFnZW50TG9nZ2Vy
ICkgQXMgTG9uZwpEZWNsYXJlIFByaXZhdGUgRnVuY3Rpb24gSGFzUnVuVG9vTG9uZyggc2F5IEFz
IEFnZW50TG9nZ2VyLCB3aG8gQXMgU3RyaW5nICkgQXMgQm9vbGVhbgpEZWNsYXJlIFByaXZhdGUg
RnVuY3Rpb24gTmVlZHNGdWxsUnVuKCB3aGF0ZGIgQXMgU3RyaW5nLCBob3dPZnRlbiBBcyBJbnRl
Z2VyLCBwbHVzV2hhdCBBcyBJbnRlZ2VyLCBzYXkgQXMgQWdlbnRMb2dnZXIgKSBBcyBCb29sZWFu
CgonKytMb3R1c1NjcmlwdCBEZXZlbG9wbWVudCBFbnZpcm9ubWVudDoyOjU6KERlY2xhcmF0aW9u
cyk6MDoyCkNvbnN0IENyYXNoT25FcnJvcnMgPSBGYWxzZSAnc2V0IHRvIHRydWUgaWYgeW91IHdh
bnQgb3QgY2F0Y2ggdGhlIGVycm9yIGluIGRlYnVnZ2VyLCBzZXQgdG8gZmFsc2UgZm9yIGxpdmUK
Q29uc3QgVGVzdE1vZGUgPSBGYWxzZQpDb25zdCBNYXhUaW1lUGVyUnVuID0gMTIwMCAnc2Vjb25k
cwoKCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6MjpJbml0aWFsaXpl
OjE6MTAKU3ViIEluaXRpYWxpemUKCQoJRGltIHNlc3Npb24gQXMgTmV3IE5vdGVzU2Vzc2lvbgoJ
RGltIGhzbG9nIEFzIEFnZW50TG9nZ2VyICd0aGlzIGlzIGFjdHVhbGx5IGEgY2xpZW50YWdlbnRs
b2dnZXIKCURpbSBDb25maWdDZW50ZXIgQXMgTm90ZXNEYXRhYmFzZQoJRGltIGNoZWNrVmlldyBB
cyBOb3Rlc1ZpZXcKCURpbSBMaXZlRGIgQXMgTm90ZXNEYXRhYmFzZQoJRGltIGNvcGllZCBBcyBM
b25nCglEaW0gZWhzcmVwaWQgQXMgU3RyaW5nCglEaW0gc2tpcHBlZDIgQXMgSW50ZWdlcgoJRGlt
IFByb2dyZXNzIEFzIE5vdGVzRG9jdW1lbnQKCURpbSBTdGFydEF0IEFzIFN0cmluZwoJRGltIENv
bmZpZ0lzQ2xlYW4gQXMgQm9vbGVhbgoJRGltIG1hc3RlciBBcyBOb3Rlc0RvY3VtZW50CglEaW0g
RWhzSURzIEFzIE5vdGVzSXRlbQoJRGltIEVoc05hbWVzICgpIEFzIFN0cmluZwoJRGltIGlkeCBB
cyBJbnRlZ2VyCglEaW0gRGJUaXRsZSBBcyBTdHJpbmcKCURpbSB3cyBBcyBOZXcgTm90ZXNVSVdv
cmtzcGFjZQoJRGltIGNob3NlbmRicyBBcyBWYXJpYW50CglEaW0gY2hvc2VuZGJJRHMgKCkgQXMg
U3RyaW5nCglEaW0gaSBBcyBJbnRlZ2VyCglEaW0gYmFyIEFzIExOUHJvZ3Jlc3NiYXIKCQoJSWYg
c2Vzc2lvbi5Jc09uU2VydmVyIFRoZW4KCQlFeGl0IFN1YgoJRW5kIElmCgljb3BpZWQgPSAwCgkK
CVNldCBoc2xvZyA9IE5ldyBBZ2VudExvZ2dlcihzZXNzaW9uLCJKYW1lcyBDb2xsaWUiLCJVcGRh
dGUgYWxsIEVIUyBkYnMgIHdpdGggdGhlIHNlY3Rpb25zL3Zpb2xhdGlvbnMvY29ycmVjdGlvbnMg
ZnJvbSBDZmdDdHIiLEZhbHNlKQoJT24gRXJyb3IgR290byBlcnJvcnRyYXAKCUlmIFRlc3RNb2Rl
IFRoZW4KCQloc2xvZy5sb2cgIlJ1bm5pbmcgaW4gVGVzdE1vZGUiLCBGYWxzZQoJRW5kIElmCglo
c2xvZy5sb2cgIlZlcnNpb24gMS4wIHdpdGggcnVuIGxpbWl0ZWQgdG8gIiAmIENpbnQoTWF4VGlt
ZVBlclJ1bi82MCkgJiAiIG1pbnV0ZXMiLCBUcnVlCgoJU2V0IENvbmZpZ0NlbnRlciA9IHNlc3Np
b24uQ3VycmVudGRhdGFiYXNlCglTZXQgTWFzdGVyID0gSFNHZXRQcm9maWxlRG9jdW1lbnQoIENv
bmZpZ0NlbnRlciwgIk1hc3RlclNldHRpbmdzIiApCglJZiBNYXN0ZXIgSXMgTm90aGluZyBUaGVu
CgkJTXNnYm94ICJVbmFibGUgdG8gZ2V0IE1hc3RlclNldHRpbmdzISIKCQloc2xvZy5sb2cgIlVu
YWJsZSB0byBnZXQgTWFzdGVyU2V0dGluZ3MhIiwgRmFsc2UKCQlFeGl0IFN1YgoJRW5kIElmCglT
ZXQgRWhzSURzID0gTWFzdGVyLmdldGZpcnN0aXRlbSggIkhlYWx0aFNwYWNlSUQiICkKCUlmIEVo
c0lEcyBJcyBOb3RoaW5nIFRoZW4KCQlNc2dib3ggIlVuYWJsZSB0byBnZXQgUmVwbGljYUlEIGxp
c3QgZnJvbSBNYXN0ZXJTZXR0aW5ncyEiCgkJaHNsb2cubG9nICJVbmFibGUgdG8gZ2V0IFJlcGxp
Y2FJRCBsaXN0IGZyb20gTWFzdGVyU2V0dGluZ3MhIiwgRmFsc2UKCQlFeGl0IFN1YgoJRW5kIElm
CglJZiBFaHNJRHMuVGV4dCA9ICIiIFRoZW4KCQlNc2dib3ggIlJlcGxpY2FJRCBsaXN0IGZyb20g
TWFzdGVyU2V0dGluZ3MgaXMgQkxBTkshIgoJCWhzbG9nLmxvZyAiUmVwbGljYUlEIGxpc3QgZnJv
bSBNYXN0ZXJTZXR0aW5ncyBpcyBCTEFOSyEiLCBGYWxzZQoJCUV4aXQgU3ViCglFbmQgSWYKCglo
c2xvZy5sb2cgImNoZWNraW5nICIgJiBVYm91bmQoRWhzSURzLlZhbHVlcykgKyAxICYgIiByZXBs
aWNhSUQgZm9yIGRhdGFiYXNlIGF2YWlsYWJpbGl0eSIsIFRydWUKCUluaXREZXRhaWxlZCBCYXIs
IFVib3VuZChFaHNJRHMuVmFsdWVzKSArIDEsIFRydWUsIFRydWUsIFRydWUKCWkgPSAwCglGb3Jh
bGwgaWQgSW4gRWhzSURzLlZhbHVlcwoJCUlmIE5vdCBMaXZlRGIgSXMgTm90aGluZyBUaGVuIERl
bGV0ZSBMaXZlRGIKCQlTZXQgTGl2ZURiID0gTmV3IE5vdGVzRGF0YWJhc2UoIiIsIiIpCgkJT24g
RXJyb3IgNDA2MCBHb3RvIGJhZGVocwoJCVNldCBMaXZlRGIgPSBPcGVuRGJCeVJlcElkKENvbmZp
Z0NlbnRlci5TZXJ2ZXIsQ3N0cihpZCksaHNsb2cpCgkJSWYgTm90IExpdmVEYiBJcyBOb3RoaW5n
IFRoZW4KCQkJUmVkaW0gUHJlc2VydmUgRWhzTmFtZXMoaSkgQXMgU3RyaW5nCgkJCUVoc05hbWVz
KGkpID0gTGl2ZURiLlRpdGxlCgkJCWkgPSBpICsgMQoJCUVuZCBJZgpuZXh0ZWhzZGIxOgoJCWlu
Y0RldGFpbGVkIEJhcgoJRW5kIEZvcmFsbAoJRGVsZXRlIGJhcgoJaHNsb2cubG9nICJmb3VuZCAi
ICYgVWJvdW5kKEVoc05hbWVzKSArIDEgJiAiIGRhdGFiYXNlcyBhdmFpbGFibGUiLCBUcnVlCgkK
CWNob3NlbmRicyA9IHdzLlByb21wdChQUk9NUFRfT0tDQU5DRUxMSVNUTVVMVCwiU2VsZWN0IERh
dGFiYXNlcyIsIkVIUyBkYXRhYmFzZXMgdG8gdXBkYXRlIG5vdyIsRWhzTmFtZXMsRWhzTmFtZXMp
CglJZiBJc2VtcHR5KGNob3NlbmRicykgVGhlbgoJCU1zZ2JveCAiQ2FuY2VsbGluZyIKCQloc2xv
Zy5sb2cgIk5vdGhpbmcgc2VsZWN0ZWQsIGNhbmNlbGxpbmciLCBGYWxzZQoJCUV4aXQgU3ViCglF
bmQgSWYKCQoJUmVkaW0gY2hvc2VuZGJJRHMgKFVib3VuZChjaG9zZW5kYnMpKSBBcyBTdHJpbmcK
CUZvciBpID0gMCBUbyBVYm91bmQoY2hvc2VuZGJzKQoJCWlkeCA9IEFycmF5Z2V0aW5kZXgoRWhz
TmFtZXMsY2hvc2VuZGJzKGkpKQoJCWNob3NlbkRiSURzKGkpID0gRWhzSURzLlZhbHVlcyhpZHgp
CglOZXh0CgkKCWhzbG9nLmxvZyAoVWJvdW5kKGNob3NlbkRCcykgKyAxKSAmICIgZGF0YWJhc2Vz
IHNlbGVjdGVkIiwgVHJ1ZQoKCSd3ZSBjb3VsZCBhbHNvIHByb21wdCBmb3IgYW4gYWRqdXN0bWVu
dCB0byB0aGUgbWF4dGltZXBlcnJ1bgoJCgknbm90IHN1cmUgaG93IHRvIGRvIHRoZSByZXN0YXJ0
IHRoaW5nIHlldC4uLiB0aGlzIG1pZ2h0IHdvcmsuLi4KCScJU2V0IFByb2dyZXNzID0gSFNHZXRQ
cm9maWxlRG9jdW1lbnQoQ29uZmlnQ2VudGVyLCJQcm9ncmVzcyIsIlVwZGF0ZVZpb2xhdGlvbnMi
ICYgc2Vzc2lvbi5Db21tb251c2VybmFtZSkKCVNldCBQcm9ncmVzcyA9IEhTR2V0UHJvZmlsZURv
Y3VtZW50KENvbmZpZ0NlbnRlciwiVXBkYXRlVmlvbGF0aW9uc1Byb2dyZXNzIiAmIHNlc3Npb24u
Q29tbW9udXNlcm5hbWUpCglJZiBQcm9ncmVzcyBJcyBOb3RoaW5nIFRoZW4KCQlTdGFydEF0ID0g
IiIKCUVsc2UKCQlTdGFydEF0ID0gUHJvZ3Jlc3MuRG9pbmcoMCkgCQoJCWhzbG9nLmxvZyAicHJl
dmlvdXMgSW5jb21wbGV0ZSBydW4gd2lsbCByZXN1bWUgYXQgIiAmIFN0YXJ0QXQsIFRydWUKCUVu
ZCBJZgoJCglpZHggPSAwCglJbml0RGV0YWlsZWQgQmFyLCBVYm91bmQoY2hvc2VuRGJJRHMpICsg
MSwgVHJ1ZSwgVHJ1ZSwgVHJ1ZQoJRm9yYWxsIHJlcGlkIEluIGNob3NlbkRiSURzCgkJRGJUaXRs
ZSA9IGNob3NlbmRicyhpZHgpCgkJaWR4ID0gaWR4ICsgMQoJCUlmIEhhc1J1blRvb0xvbmcoaHNs
b2csIkluaXQgbWFpbiBsb29wICgiICYgRGJUaXRsZSAmICIpIikgVGhlbgoJCQlFeGl0IEZvcmFs
bAoJCUVuZCBJZgoJCUlmIFN0YXJ0QXQgPSBEYlRpdGxlIFRoZW4gJ2ZvdW5kIHN0YXJ0aW5nIHNw
b3QKCQkJU3RhcnRBdCA9ICIiCgkJRW5kIElmCgkJSWYgU3RhcnRBdCA8PiAiIiBUaGVuCgkJCXNr
aXBwZWQyID0gc2tpcHBlZDIgKyAxCgkJCSdoc2xvZy5sb2cgIkxlYXZpbmcgIiAmIGRidGl0bGUg
JiAiIHRpbGwgYSBsYXRlciBydW4sIGxvb2tpbmcgZm9yICIgJiBTdGFydEF0LCBGYWxzZQoJCUVs
c2UKCQkJaHNsb2cubG9nICIgIiwgRmFsc2UKCQkJaHNsb2cubG9nICIgc3RhcnRpbmcgIiAmIERi
VGl0bGUsIEZhbHNlCgkJCUlmIE5vdCBQcm9ncmVzcyBJcyBOb3RoaW5nIFRoZW4KCQkJCVByb2dy
ZXNzLkRvaW5nID0gRGJUaXRsZQoJCQkJUHJvZ3Jlc3MuU2F2ZSBUcnVlLCBUcnVlCgkJCUVuZCBJ
ZgoJCQlJZiBOb3QgTGl2ZURiIElzIE5vdGhpbmcgVGhlbiBEZWxldGUgTGl2ZURiCgkJCVNldCBM
aXZlRGIgPSBOZXcgTm90ZXNEYXRhYmFzZSgiIiwiIikKCQkJT24gRXJyb3IgNDA2MCBHb3RvIGJh
ZGVocwoJCQlTZXQgTGl2ZURiID0gT3BlbkRiQnlSZXBJZChDb25maWdDZW50ZXIuU2VydmVyLENz
dHIocmVwaWQpLGhzbG9nKQoJCQlJZiBOb3QgTGl2ZURiIElzIE5vdGhpbmcgVGhlbgoJCQkJU2V0
IENoZWNrVmlldyA9IExpdmVEYi5HZXR2aWV3KCJSZWNlbnRDaGFuZ2VzVmlvbCIpCgkJCQlJZiBD
aGVja1ZpZXcgSXMgTm90aGluZyBUaGVuCgkJCQkJaHNsb2cubG9nd2FybmluZyBMaXZlRGIudGl0
bGUgJiAiIGRvZXMgbm90IGhhdmUgUmVjZW50Q2hhbmdlc1Zpb2wgbG9va3VwIHZpZXciLCBGYWxz
ZQoJCQkJCWhzbG9nLkFkZExpbmsgTGl2ZURiCgkJCQlFbHNlCgkJCQkJQ29uZmlnSXNDbGVhbiA9
IFRydWUKCQkJCQknYWx3YXlzIGRvIHRoaXMhIGl0IG9ubHkgdGFrZXMgYSBmZXcgc2Vjb25kcwoJ
CQkJCSdJZiBOZWVkc0Z1bGxSdW4oIExpdmVEYi5SZXBsaWNhaWQsIDcsIDIwLCBoc2xvZyApIFRo
ZW4KCQkJCQlDb25maWdJc0NsZWFuID0gQ2hlY2tGb3JEdXBsaWNhdGVzKENvbmZpZ0NlbnRlcixo
c2xvZykKCQkJCQknRW5kIElmICduZWVkcyBmdWxsIHJ1bgoJCQkJCUlmIENvbmZpZ0lzQ2xlYW4g
IFRoZW4KCQkJCQkJSWYgTm90IEhhc1J1blRvb0xvbmcoaHNsb2csIkluaXQsIGJlZm9yZSBDb3B5
RG9jcyIpIFRoZW4KCQkJCQkJCWNvcGllZCA9IENvcHlEb2NzKENvbmZpZ0NlbnRlcixMaXZlRGIs
aHNsb2cpCgkJCQkJCQlJZiBjb3BpZWQgPiAwIFRoZW4KCQkJCQkJCQloc2xvZy5sb2cgIlVwZGF0
ZWQgIiAmIGNvcGllZCAmICIgaW4gIiAmIExpdmVEYi5UaXRsZSwgRmFsc2UKCQkJCQkJCUVsc2Vp
ZiBjb3BpZWQgPCAwIFRoZW4KCQkJCQkJCQloc2xvZy5sb2cgInRyb3VibGUgaW4gIiAmIExpdmVE
Yi5UaXRsZSAmICIgd2hpbGUgY29weWluZyBkb2NzLiBVcGRhdGVkICIgJiAtY29waWVkLCBGYWxz
ZQoJCQkJCQkJRW5kIElmICdjb3BpZWQgbnVtYmVyCgkJCQkJCUVuZCBJZiAnbGltaXRydW50bwoJ
CQkJCUVsc2UKCQkJCQkJaHNsb2cubG9nd2FybmluZyAidHJvdWJsZSBpbiAiICYgQ29uZmlnQ2Vu
dGVyLlRpdGxlICYgIiEgRHVwbGljYXRlIERvY0lEcyBtdXN0IGJlIHJlc29sdmVkLiAiICYgTGl2
ZURiLnRpdGxlICYgIiBOT1QgcHJvY2Vzc2VkLiIsIEZhbHNlCgkJCQkJCWhzbG9nLkFkZExpbmsg
Q29uZmlnQ2VudGVyCgkJCQkJRW5kIElmICdjb25maWcgaXMgY2xlYW4KCQkJCQknCURlbGV0ZVN0
YWxlRm9sZGVycyBDb25maWdDZW50ZXIsIGhzbG9nCgkJCQlFbmQgSWYgJ2NoZWNrdmlldyBub3Ro
aW5nCgkJCQknCQkJCURlbGV0ZVN0YWxlRm9sZGVycyBMaXZlRGIsIGhzbG9nCgkJCQlJZiBOZWVk
c0Z1bGxSdW4oIExpdmVEYi5SZXBsaWNhaWQsIDcsIDEwLCBoc2xvZyApIFRoZW4KCQkJCQlDYWxs
IENoZWNrRm9yRHVwbGljYXRlcyhMaXZlRGIsaHNsb2cpCgkJCQlFbmQgSWYKCQkJCWhzbG9nLmxv
ZyAiIGRvbmUgIiAmIERiVGl0bGUsIEZhbHNlCgkJCUVsc2UKCQkJCWhzbG9nLmxvZ3dhcm5pbmcg
IiAtLT4gbm90IHVwZGF0aW5nICIgJiBEYlRpdGxlICYgIiBiZWNhdXNlIGl0IGNhbid0IGJlIGZv
dW5kIiwgRmFsc2UKCQkJRW5kIElmICdlaHMgZGIgb3BlbmVkCgkJRW5kIElmICd3aGF0IHNlcnZl
ciBhcmUgd2Ugb24/Cm5leHRlaHNkYjI6CgkJSWYgTm90IFByb2dyZXNzIElzIE5vdGhpbmcgVGhl
biAKCQkJUHJvZ3Jlc3MuRG9pbmcgPSBEYlRpdGxlCgkJCVByb2dyZXNzLlNhdmUgVHJ1ZSwgVHJ1
ZQoJCUVuZCBJZgoJCWluY2RldGFpbGVkIEJhcgoJRW5kIEZvcmFsbAoJRGVsZXRlIGJhcgoJSWYg
Tm90IFByb2dyZXNzIElzIE5vdGhpbmcgVGhlbiAKCQlJZiBOb3QgSGFzUnVuVG9vTG9uZyhoc2xv
ZywiSW5pdCBhZnRlciBtYWluIGxvb3AiKSBUaGVuCgkJCVByb2dyZXNzLkRvaW5nID0gIiIKCQkJ
UHJvZ3Jlc3MuU2F2ZSBUcnVlLCBUcnVlCgkJRWxzZQoJCQloc2xvZy5sb2cgIk5leHQgcnVuIHdp
bGwgc2tpcCB0byAiICYgUHJvZ3Jlc3MuRG9pbmcoMCksIEZhbHNlCQkKCQlFbmQgSWYKCUVuZCBJ
ZgoJCQoJSWYgc2tpcHBlZDIgPiAwIFRoZW4gaHNsb2cubG9nICIoc2tpcHBlZCAiICYgc2tpcHBl
ZDIgJiAiIGRicywgdG8gYmUgZG9uZSBsYXRlcikiLCBGYWxzZQoJaHNsb2cuc3VjY2VzcwoJCmRv
bmU6CglFeGl0IFN1YgoJCmJhZGVoczoKCWhzbG9nLmxvZyAiIC0tPiBTa2lwcGluZyAiICYgRGJU
aXRsZSAmICIgYmVjYXVzZSBkb250IGhhdmUgYWNjZXNzIHRvIGl0IiwgRmFsc2UKCUlmIElzZW1w
dHkoY2hvc2VuZGJzKSBUaGVuCgkJUmVzdW1lIG5leHRlaHNkYjEKCUVsc2UKCQlSZXN1bWUgbmV4
dGVoc2RiMgoJRW5kIElmCgkKZXJyb3J0cmFwOgoJaHNsb2cubG9nd2FybmluZyAiTGluZSAjIiAm
IEVybCAmICIgb2YgaW5pdGlhbGl6ZSBoYXMgdGhpcyBlcnJvciAjOiAgIiAmIEVyciAmICIgIGFu
ZCB0aGlzIGVycm9yOiAgIiAmIEVycm9yLCBUcnVlCgloc2xvZy5FcnJvcgoJUmVzdW1lIGRvbmUK
CQpFbmQgU3ViCgonKytMb3R1c1NjcmlwdCBEZXZlbG9wbWVudCBFbnZpcm9ubWVudDoyOjE6TWFr
ZU5ld2RvYzoxOjgKUHJpdmF0ZSBGdW5jdGlvbiBNYWtlTmV3ZG9jKCBUcmd0RGIgQXMgTm90ZXNE
YXRhYmFzZSwgU3JjIEFzIE5vdGVzRG9jdW1lbnQsIHllbGxvdyBBcyBBZ2VudExvZ2dlciwgbGV2
ZWwgQXMgSW50ZWdlciApIEFzIE5vdGVzRG9jdW1lbnQKJVJFTQoJRnVuY3Rpb24gTWFrZU5ld2Rv
YwoJRGVzY3JpcHRpb246IENvbW1lbnRzIGZvciBGdW5jdGlvbgolRU5EIFJFTQoJCglEaW0gVHJn
dCBBcyBOb3Rlc0RvY3VtZW50CgkKCUlmIE5vdCBDcmFzaE9uRXJyb3JzIFRoZW4gT24gRXJyb3Ig
R290byBlcnJvcnRyYXAKCQoJSWYgbGV2ZWwgPiAzMCBUaGVuICdNYWtlTmV3RG9jIEFuZCBBdHRh
Y2hUb1BhcmVudCBjYWxsIGVhY2hvdGhlci4gV2F0Y2ggZm9yIGxvb3BzLgoJCXllbGxvdy5sb2d3
YXJuaW5nICJEb2NzIGxpbmtlZCBpbiBhIGxvb3AhIiwgRmFsc2UKCQl5ZWxsb3cuYWRkbGluayBT
cmMKCQlFeGl0IEZ1bmN0aW9uCglFbmQgSWYKCQoJSWYgVGVzdE1vZGUgVGhlbgoJCVNldCBUcmd0
ID0gVHJndERiLkNyZWF0ZWRvY3VtZW50ICdzbyB3ZSBoYXZlIGEgcHJldGVuZCBkb2MgdG8gcGxh
eSB3aXRoLCB3aGljaCB3aWxsIG5vdCBiZSBzYXZlZC4gQ29weVRvRGF0ZWFic2UgYWN0dWFsbHkg
bWFrZXMgYSBkb2MKCUVsc2UKCQlTZXQgVHJndCA9IFNyYy5Db3B5dG9kYXRhYmFzZShUcmd0RGIp
CglFbmQgSWYKCXllbGxvdy5JbmNyZW1lbnREb2N1bWVudHNBZGRlZAoJSWYgU3JjLlBhcmVudGRv
Y3VtZW50dW5pZCA8PiAiIiBUaGVuIAoJCUlmIE5vdCBBdHRhY2hUb1BhcmVudChTcmMsVHJndCx5
ZWxsb3csIGxldmVsKzEpIFRoZW4KCQkJJ3llbGxvdy5sb2d3YXJuaW5nICJkcmF0LCBjYW50IGF0
dGFjaCIsIEZhbHNlICdhdHRhY2ggYWxyZWFkeSBsb2dzIHRoZSBmYWlsdXJlCgkJRW5kIElmCglF
bmQgSWYKCVRyZ3QuTW92ZWQgPSBOb3cKCUlmIE5vdCBUZXN0TW9kZSBUaGVuCgkJSWYgTm90IFRy
Z3Quc2F2ZShUcnVlLFRydWUpIFRoZW4KCQkJeWVsbG93LmxvZyAiU2F2ZSBmYWlsZWQhIChpbiBN
YWtlTmV3KSIgJiBUcmd0LkRvY3VtZW50SUQoMCksIFRydWUKCQlFbmQgSWYgJ3NhdmUKCUVuZCBJ
ZiAndGVzdG1vZGUKCQoJU2V0IE1ha2VOZXdEb2MgPSBUcmd0CQoJCmJ5ZToKCUV4aXQgRnVuY3Rp
b24KCQplcnJvcnRyYXA6Cgl5ZWxsb3cubG9nd2FybmluZyAiTGluZSAjIiAmIEVybCAmICIgb2Yg
TWFrZU5ld0RvYyBoYXMgdGhpcyBlcnJvciAjOiAgIiAmIEVyciAmICIgIGFuZCB0aGlzIGVycm9y
IG1lc3NhZ2U6ICIgJiBFcnJvciwgVHJ1ZQoJeWVsbG93LkFkZExpbmsgU3JjCglSZXN1bWUgYnll
CgkKRW5kIEZ1bmN0aW9uCgonKytMb3R1c1NjcmlwdCBEZXZlbG9wbWVudCBFbnZpcm9ubWVudDoy
OjE6Q2hlY2tGb3JEdXBsaWNhdGVzOjE6OApQcml2YXRlIEZ1bmN0aW9uIENoZWNrRm9yRHVwbGlj
YXRlcyggTGl2ZURiIEFzIE5vdGVzRGF0YWJhc2UsIGFsb2cgQXMgQWdlbnRMb2dnZXIgKQoJJVJF
TQoJU3ViIENoZWNrRm9yRHVwbGljYXRlcwoJRGVzY3JpcHRpb246IENvbW1lbnRzIGZvciBTdWIK
CSVFTkQgUkVNCgkKCURpbSBjaGFuZ2VkIEFzIE5vdGVzVmlldwoJRGltIGVudHJpZXMgQXMgTm90
ZXNWaWV3RW50cnlDb2xsZWN0aW9uCglEaW0gZW50IEFzIE5vdGVzVmlld0VudHJ5CglEaW0gTG9v
a3VwRG9jSUQgQXMgTm90ZXNWaWV3CglEaW0gZHVwcyBBcyBOb3Rlc1ZpZXdFbnRyeUNvbGxlY3Rp
b24KCURpbSBkdXBDb3VudCBBcyBMb25nCglTdGF0aWMgQ29uZmlnc0NoZWNrZWQgTGlzdCBBcyBM
b25nICdzbyB3ZSBkb250IGhhdmUgdG8gY2hlY2sgdGhlIGNvbmZpZ3MgMzUgdGltZXMgZm9yIFdJ
LCBvciAxNDAgdGltZXMgZm9yIG9oaW8gCQoJCglJZiBOb3QgQ3Jhc2hPbkVycm9ycyBUaGVuIE9u
IEVycm9yIEdvdG8gZXJyb3J0cmFwCgkKCUlmIElzZWxlbWVudChDb25maWdzQ2hlY2tlZChsaXZl
ZGIuUmVwbGljYWlkKSkgVGhlbgoJCWFsb2cubG9nICJwcmV2aW91c2x5IGNoZWNrZWQgIiAmIExp
dmVEYi5UaXRsZSAmICIgYW5kIGZvdW5kICIgJiBDb25maWdzQ2hlY2tlZChsaXZlZGIuUmVwbGlj
YWlkKSAmICIgIGR1cGxpY2F0ZSBJRHMiLCBGYWxzZQoJRWxzZQoJCVNldCBjaGFuZ2VkID0gTGl2
ZURiLkdldFZpZXcoIlJlY2VudENoYW5nZXNWaW9sIikKCQlJZiBOb3QgY2hhbmdlZCBJcyBOb3Ro
aW5nIFRoZW4gJ25vIGVycm9yIG1zZywgdGhpcyBpcyB0aGUgc2FtZSB0ZXN0IHRoYXQgZmFpbGVk
IHdoZW4gd2UgY2FsbGVkIENvcHlEb2NzCgkJCWFsb2cubG9nICJjaGVja2luZyAiICYgY2hhbmdl
ZC5BbGxlbnRyaWVzLkNvdW50ICYgIiBkb2N1bWVudHMgZm9yIGR1cGxpY2F0ZSBJRHMiLCBGYWxz
ZQoJCQlTZXQgTG9va3VwRG9jSUQgPSBMaXZlRGIuR2V0dmlldygiKERvY3VtZW50SURMb29rdXAp
IikKCQkJSWYgTm90IExvb2t1cERvY0lEIElzIE5vdGhpbmcgVGhlbgoJCQkJU2V0IGVudHJpZXMg
PSBjaGFuZ2VkLkFsbGVudHJpZXMKCQkJCVNldCBlbnQgPSBlbnRyaWVzLkdldGZpcnN0ZW50cnko
KQoJCQkJV2hpbGUgTm90IGVudCBJcyBOb3RoaW5nCgkJCQkJU2V0IGR1cHMgPSBMb29rdXBEb2NJ
ZC5HZXRBbGxFbnRyaWVzQnlLZXkoIGVudC5jb2x1bW52YWx1ZXMoMSksIFRydWUgKQoJCQkJCUlm
IGR1cHMuY291bnQgPiAxIFRoZW4KCQkJCQkJYWxvZy5sb2cgIlRoZXJlIGFyZSAiICYgZHVwcy5j
b3VudCAmICIgZW50cmllcyBmb3IgIiAmIGVudC5jb2x1bW52YWx1ZXMoMSksIEZhbHNlCgkJCQkJ
CWR1cENvdW50ID0gZHVwQ291bnQgKyBkdXBzLmNvdW50IAoJCQkJCUVuZCBJZgoJCQkJCVNldCBl
bnQgPSBlbnRyaWVzLkdldG5leHRlbnRyeShlbnQpCgkJCQlXZW5kCQkKCQkJRW5kIElmCQoJCUVu
ZCBJZgoJCWFsb2cubG9nICJUaGVyZSB3ZXJlIGEgdG90YWwgb2YgIiAmIGR1cENvdW50ICYgIiBk
dXBsaWNhdGUgZW50cmllcyIsIEZhbHNlCgkJQ29uZmlnc0NoZWNrZWQobGl2ZWRiLlJlcGxpY2Fp
ZCkgPSBkdXBDb3VudAoJRW5kIElmCgkKYnllOgoJQ2hlY2tGb3JEdXBsaWNhdGVzID0gZHVwQ291
bnQgPSAwCglFeGl0IEZ1bmN0aW9uCgkKZXJyb3J0cmFwOgoJYWxvZy5sb2d3YXJuaW5nICJMaW5l
ICMiICYgRXJsICYgIiBvZiBDaGVja0ZvckR1cGxpY2F0ZXMgaGFzIGVycm9yICMiICYgRXJyICYg
IiBhbmQgdGhpcyBlcnJvciBtZXNzYWdlOiAiICYgRXJyb3IsIFRydWUKCWR1cENvdW50ID0gLTEK
CVJlc3VtZSBieWUKCQpFbmQgRnVuY3Rpb24KCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVu
dmlyb25tZW50OjI6MTpBdHRhY2hUb1BhcmVudDoxOjgKUHJpdmF0ZSBGdW5jdGlvbiBBdHRhY2hU
b1BhcmVudCggc3JjIEFzIE5vdGVzRG9jdW1lbnQsIGRlc3QgQXMgTm90ZXNEb2N1bWVudCwgYWds
ZyBBcyBBZ2VudExvZ2dlciwgbGV2ZWwgQXMgSW50ZWdlciApIEFzIEJvb2xlYW4KCSVSRU0KCUZ1
bmN0aW9uIEF0dGFjaFRvUGFyZW50CglEZXNjcmlwdGlvbjogTWFrZXMgdGhlIHBhcmVudCBjaGls
ZCBzdHJ1Y3R1cmUgaW4gRUhTIG1hdGNoIENvbmZpZ0N0cgoJUmV0dXJucyB0cnVlIGlmIGl0IGNh
biwgZmFsc2UgaWYgaXQgaGFzIHRyb3VibGUKCSVFTkQgUkVNCgkKCURpbSBTcmNEYiBBcyBOb3Rl
c0RhdGFiYXNlCglEaW0gRGVzdERiIEFzIE5vdGVzRGF0YWJhc2UKCURpbSBTcmNQYXJlbnQgQXMg
Tm90ZXNEb2N1bWVudAoJRGltIERlc3RQYXJlbnQgQXMgTm90ZXNEb2N1bWVudAoJQ29uc3QgTmFn
QWxsID0gRmFsc2UKCQoJU3RhdGljIENvdW50T3JwaGFucyBBcyBMb25nCgkKCUlmIGxldmVsID0g
LTEgVGhlbiAnd2UncmUgYWxsIGRvbmUgdGhpcyBkYiwgYnV0IHdlIHdhbnQgdGhlIGNvdW50IG9m
IG9ycGhhbnMgbG9nZ2VkCgkJSWYgQ291bnRPcnBoYW5zID4gMCBUaGVuCgkJCWFnbGcubG9nd2Fy
bmluZyAiVG90YWwgT3JwaGFuIGNvdW50IGlzICIgJiBDb3VudE9ycGhhbnMsIEZhbHNlCgkJRW5k
IElmCgkJQXR0YWNoVG9QYXJlbnQgPSBUcnVlCglFbHNlCgkJQXR0YWNoVG9QYXJlbnQgPSBGYWxz
ZQoJCUlmIE5vdCBDcmFzaE9uRXJyb3JzIFRoZW4gT24gRXJyb3IgR290byBlcnJvcnRyYXAKCQkK
CQlJZiBsZXZlbCA+IDI3IFRoZW4gJ01ha2VOZXdEb2MgQW5kIEF0dGFjaFRvUGFyZW50IGNhbGwg
ZWFjaG90aGVyLiBXYXRjaCBmb3IgbG9vcHMuCgkJCWFnbGcubG9nd2FybmluZyAiRG9jcyBsaW5r
ZWQgaW4gYSBsb29wISAoZGVzdC0+IiwgRmFsc2UKCQkJYWdsZy5hZGRsaW5rIGRlc3QKCQlFbmQg
SWYKCQkKCQlTZXQgU3JjRGIgPSBzcmMuUGFyZW50ZGF0YWJhc2UKCQlTZXQgU3JjUGFyZW50ID0g
SFNHZXRQYXJlbnRCeVVOSUQoU3JjRGIsc3JjLCIiKQoJCUlmIFNyY1BhcmVudCBJcyBOb3RoaW5n
IFRoZW4gJ25vdGhpbmcgaXMgYW4gZXJyb3IhIFdlIG9ubHkgY2FsbCB0aGlzIGZ1bmN0aW9uIHdo
ZW4gLlBhcmVudFVOSUQgaXMgbm90IGJsYW5rIChuZXZlciBmb3Igc2VjdGlvbnMgb3IgdmlvbGF0
aW9ucykKCQkJQ291bnRPcnBoYW5zID0gQ291bnRPcnBoYW5zICsgMQoJCQlJZiBOYWdBbGwgVGhl
bgoJCQkJYWdsZy5sb2cgIiBmb3VuZCBvcnBoYW4gZG9jIGluIENmZyIsIEZhbHNlCgkJCQlhZ2xn
LkFkZExpbmsgc3JjCgkJCUVsc2VpZiBDb3VudE9ycGhhbnMgTW9kIDEwMCA9IDEgVGhlbgoJCQkJ
YWdsZy5sb2d3YXJuaW5nICJPcnBoYW4gY291bnQgbm93IGF0ICIgJiBDb3VudE9ycGhhbnMsIEZh
bHNlCgkJCUVuZCBJZgoJCUVsc2VpZiBTcmNQYXJlbnQuU2l6ZSA9IDAgVGhlbgoJCQlDb3VudE9y
cGhhbnMgPSBDb3VudE9ycGhhbnMgKyAxCgkJCUlmIE5hZ0FsbCBUaGVuCgkJCQlhZ2xnLmxvZyAi
IGZvdW5kIG9ycGhhbiBkb2MgaW4gQ2ZnIChTaXplIDApIiwgRmFsc2UKCQkJCWFnbGcuQWRkTGlu
ayBzcmMKCQkJRWxzZWlmIENvdW50T3JwaGFucyBNb2QgMTAwID0gMSBUaGVuCgkJCQlhZ2xnLmxv
Z3dhcm5pbmcgIk9ycGhhbiBjb3VudCBub3cgYXQgIiAmIENvdW50T3JwaGFucywgRmFsc2UKCQkJ
RW5kIElmCgkJRWxzZSAnZ29vZCBzcmNwYXJlbnQKCQkJU2V0IERlc3REYiA9IGRlc3QuUGFyZW50
ZGF0YWJhc2UKCQkJU2V0IERlc3RQYXJlbnQgPSBHZXREb2NCeUlEKERlc3REYixTcmNQYXJlbnQu
RG9jdW1lbnRJRCgwKSwiIixhZ2xnKQoJCQlJZiBEZXN0UGFyZW50IElzIE5vdGhpbmcgVGhlbgoJ
CQkJJ25ld2RvYyBuZWVkZWQKCQkJCVNldCBEZXN0UGFyZW50ID0gTWFrZU5ld2RvYyhEZXN0RGIs
U3JjUGFyZW50LGFnbGcsbGV2ZWwrMSkKCQkJCUlmIERlc3RQYXJlbnQgSXMgTm90aGluZyBUaGVu
CgkJCQkJYWdsZy5sb2d3YXJuaW5nICJjb3VsZCBub3QgY3JlYXRlIHBhcmVudCBpbiBFSFMiLCBG
YWxzZQoJCQkJCWFnbGcuQWRkTGluayBTcmNQYXJlbnQKCQkJCUVsc2VpZiBOb3QgRGVzdFBhcmVu
dC5zYXZlKFRydWUsVHJ1ZSkgVGhlbgoJCQkJCWFnbGcubG9nd2FybmluZyAic2F2ZSBmYWlsZWQg
d2hlbiBjcmVhdGluZyBwYXJlbnQgaW4gRUhTIiwgRmFsc2UKCQkJCUVuZCBJZgoJCQlFbmQgSWYg
J2Rlc3RwYXJlbnQgbm90aGluZwoJCQlJZiBEZXN0UGFyZW50IElzIE5vdGhpbmcgVGhlbgoJCQkJ
YWdsZy5sb2d3YXJuaW5nICJubyBwYXJlbnQgaW4gRUhTIiwgRmFsc2UKCQkJRWxzZQoJCQkJZGVz
dC5NYWtlcmVzcG9uc2UgRGVzdFBhcmVudAoJCQkJQXR0YWNoVG9QYXJlbnQgPSBUcnVlCgkJCUVu
ZCBJZiAnZGVzdHBhcmVudCBub3RoaW5nCgkJRW5kIElmICdzcmNwYXJlbnQgbm90aGluZyBvciBz
aXplMAoJRW5kIElmICdsZXZlbCAtMQoJCmJ5ZToKCUV4aXQgRnVuY3Rpb24KCQplcnJvcnRyYXA6
CglhZ2xnLmxvZ3dhcm5pbmcgIkxpbmUgIyIgJiBFcmwgJiAiIG9mIEF0dGFjaFRvUGFyZW50IGhh
cyB0aGlzIGVycm9yICM6ICAiICYgRXJyICYgIiAgYW5kIHRoaXMgZXJyb3I6ICAiICYgRXJyb3Is
IFRydWUKCUF0dGFjaFRvUGFyZW50ID0gRmFsc2UKCVJlc3VtZSBieWUKCQpFbmQgRnVuY3Rpb24K
CicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6MTpDb3B5RG9jczoxOjgK
UHJpdmF0ZSBGdW5jdGlvbiBDb3B5RG9jcyggU291cmNlVmlvbERiIEFzIE5vdGVzRGF0YWJhc2Us
IFRhcmdldEVIU2RiIEFzIE5vdGVzRGF0YWJhc2UsIGFsb2cgQXMgQWdlbnRMb2dnZXIgKSBBcyBM
b25nCgklUkVNCglGdW5jdGlvbiBDb3B5RG9jcwoJRGVzY3JpcHRpb246IEdpdmVuIGEgc291cmNl
IGNvbmZpZy92aW9sYXRpb24gZGIgYW5kIGRlc3RpbmF0aW9uIGVocyBkYXRhYmFzZSwgY29waWVz
IGFueSBuZXcgb3IgY2hhZ25lZCBkb2NzIGZyb20gc291cmNlIHRvIGRlc3QKCSVFTkQgUkVNCgkK
CURpbSBEb25lQ291bnQgQXMgTG9uZwoJRGltIGNoYW5nZWQgQXMgTm90ZXNWaWV3CglEaW0gZW50
cmllcyBBcyBOb3Rlc1ZpZXdFbnRyeUNvbGxlY3Rpb24KCURpbSBlbnQgQXMgTm90ZXNWaWV3RW50
cnkKCURpbSBjdXRvZmYgQXMgVmFyaWFudCAndmFyaWFudCB0eXBlIGRhdGUKCURpbSBMb29rdXBE
b2NJRCBBcyBOb3Rlc1ZpZXcKCURpbSBGb3VuZEN1dE9mZiBBcyBCb29sZWFuCglEaW0gZXhwZWN0
aW5nIEFzIExvbmcKCQoJSWYgTm90IENyYXNoT25FcnJvcnMgVGhlbiBPbiBFcnJvciBHb3RvIGVy
cm9ydHJhcAoJCglEb25lQ291bnQgPSAtOTk5OTk5OSAndGhpcyB3aWxsIHJlcG9ydCBhbiBlcnJv
ciBpZiBzb21ldGhpbmcgYmFkIGhhcHBlbnMgYmVmb3JlIHdlIHN0YXJ0IGNvcHlpbmcgZG9jcwoJ
YWxvZy5sb2cgImNvcHlpbmcgdG8gIiAmIFRhcmdldEVIU2RiLlRpdGxlLCBUcnVlCglhbG9nLmFk
ZGxpbmsgVGFyZ2V0RUhTZGIKCWFsb2cubG9nICIgZ2V0dGluZyB2aWV3Li4uIiwgVHJ1ZQoJU2V0
IGNoYW5nZWQgPSBUYXJnZXRFSFNkYi5HZXRWaWV3KCJSZWNlbnRDaGFuZ2VzVmlvbCIpCglJZiBj
aGFuZ2VkIElzIE5vdGhpbmcgVGhlbgoJCWFsb2cubG9nICJDYW4ndCBnZXQgdmlldyAnUmVjZW50
Q2hhbmdlc1Zpb2wnIiwgVHJ1ZQoJRWxzZQoJCVNldCBlbnRyaWVzID0gY2hhbmdlZC5BbGxlbnRy
aWVzCgkJYWxvZy5sb2cgIiB2aWV3IGNvdW50IGlzICIgJiBjaGFuZ2VkLkFsbGVudHJpZXMuQ291
bnQsIFRydWUKCQlTZXQgZW50ID0gZW50cmllcy5HZXRmaXJzdGVudHJ5KCkgJ3RoaXMgaXMgdGhl
IG5ld2VzdCBkb2MgaW4gdGhlIHZpZXcKCQlJZiBlbnQgSXMgTm90aGluZyBUaGVuCgkJCWFsb2cu
bG9nICJSZWNlbnRDaGFuZ2VzVmlvbCBpcyBlbXB0eSIsIEZhbHNlCgkJCWN1dG9mZiA9IENkYXQo
ICIyMS1NYXktMTk2MSAwNDozMCIgKQoJCUVsc2VpZiBOZWVkc0Z1bGxSdW4oIFRhcmdldEVIU2Ri
LlJlcGxpY2FpZCwgMzAsIDAsIGFsb2cgKSBUaGVuCgkJCWFsb2cubG9nICJNb250aGx5IGZ1bGwg
cnVuIHRvZGF5IiwgRmFsc2UKCQkJY3V0b2ZmID0gQ2RhdCggIjIxLU1heS0xOTYxIDA0OjMwIiAp
CgkJRWxzZQoJCQljdXRvZmYgPSBDZGF0KGVudC5Db2x1bW5WYWx1ZXMoMCkpCgkJRW5kIElmICdj
aGFuZ2VzIHZpZXcgaXMgZW1wdHkKCQknCQljdXRvZmYgPSBjdXRvZmYgLSAwICdpZiB5b3Ugd2Fu
dCB0byBnaXZlIGEgYnVmZmVyIChmb3IgZGF5cyB0aGF0IHRoaW5ncyByYW4gYmFkPykgeW91IGNh
biBhZGp1c3QgY3V0b2ZmIGhlcmUKCQlhbG9nLmxvZyAiY2hlY2tpbmcgZm9yIGNoYW5nZXMgc2lu
Y2UgIiAmIEZvcm1hdCggY3V0b2ZmLCAiZGQtbW1tLXl5IGhoOm1tIiApLCBUcnVlCgkJRGVsZXRl
IGNoYW5nZWQKCQlTZXQgY2hhbmdlZCA9IFNvdXJjZVZpb2xEYi5HZXRWaWV3KCJSZWNlbnRDaGFu
Z2VzVmlvbCIpCgkJSWYgY2hhbmdlZCBJcyBOb3RoaW5nIFRoZW4KCQkJYWxvZy5sb2cgIldvYWgu
IExvc3QgdGhlIFZpZXcgJ1JlY2VudENoYW5nZXNWaW9sJyIsIEZhbHNlCgkJRWxzZQoJCQljaGFu
Z2VkLkF1dG9VcGRhdGUgPSBGYWxzZQoJCQlTZXQgZW50cmllcyA9IGNoYW5nZWQuQWxsZW50cmll
cwoJCQlTZXQgZW50ID0gZW50cmllcy5HZXRmaXJzdGVudHJ5KCkgJ3RoaXMgaXMgdGhlIG5ld2Vz
dCBkb2MKCQkJRG9uZUNvdW50ID0gMCAnYWxsIHNldC4KCQkJSWYgZW50IElzIE5vdGhpbmcgVGhl
bgoJCQkJYWxvZy5sb2cgIm5vIGRvY3MgdG8gY29weSBmcm9tIiwgRmFsc2UKCQkJRWxzZQoJCQkJ
SWYgQ2RhdChlbnQuQ29sdW1uVmFsdWVzKDApKSA+IGN1dG9mZiBUaGVuICd3b3JrIHRvIGRvCgkJ
CQkJJ29rLCB3ZSdyZSBnb2luZyB0byBzdGFydCBhdCB0aGUgY3V0b2ZmIHBvaW50IGFuZCB3b3Jr
IGJhY2sgdG93YXJkcyB0aGUgbmV3IGVuZCwgaW4gY2FzZSBzb21ldGhpbmcgZ29lcyBiYWQuIHRo
aXMgd2F5IHdlIGNhbiByZSBydW4gd2l0aG91dCBza2lwcGluZyBhbnl0aGluZwoJCQkJCUZvdW5k
Y3V0b2ZmID0gRmFsc2UKCQkJCQlleHBlY3RpbmcgPSAwCgkJCQkJV2hpbGUgTm90IChlbnQgSXMg
Tm90aGluZyBPciBGb3VuZEN1dG9mZikKCQkJCQkJZXhwZWN0aW5nID0gZXhwZWN0aW5nICsgMQoJ
CQkJCQlJZiBDZGF0KGVudC5Db2x1bW5WYWx1ZXMoMCkpIDwgY3V0b2ZmIFRoZW4KCQkJCQkJCUZv
dW5kY3V0b2ZmID0gVHJ1ZQoJCQkJCQlFbHNlCgkJCQkJCQlTZXQgZW50ID0gZW50cmllcy5HZXRu
ZXh0ZW50cnkoZW50KQoJCQkJCQlFbmQgSWYKCQkJCQlXZW5kCgkJCQkJSWYgZW50IElzIE5vdGhp
bmcgVGhlbgoJCQkJCQlTZXQgZW50ID0gZW50cmllcy5HZXRsYXN0ZW50cnkoKSAndGhpcyBpcyB0
aGUgb2xkZXN0IGRvYwoJCQkJCUVuZCBJZgoJCQkJCWFsb2cubG9nICJMb29rcyBsaWtlIHRoZXJl
IGFyZSAiICYgZXhwZWN0aW5nICYgIiBkb2NzIHRvIHVwZGF0ZS4iLCBUcnVlCgoJCQkJCVNldCBM
b29rdXBEb2NJRCA9IFRhcmdldEVIU2RiLkdldHZpZXcoIihEb2N1bWVudElETG9va3VwKSIpCgkJ
CQkJSWYgTG9va3VwRG9jSUQgSXMgTm90aGluZyBUaGVuCgkJCQkJCWFsb2cubG9nd2FybmluZyAi
Q2FuJ3QgcHJvY2VzcyAiICYgVGFyZ2V0RUhTZGIuVGl0bGUgJiAiLiBObyAoRG9jdW1lbnRJRExv
b2t1cCkgdmlldyIsIFRydWUKCQkJCQkJYWxvZy5BZGRMaW5rIFRhcmdldEVIU2RiCgkJCQkJRWxz
ZQoJCQkJCQlMb29rdXBEb2NJRC5BdXRvVXBkYXRlID0gRmFsc2UKCQkJCQkJV2hpbGUgTm90IChl
bnQgSXMgTm90aGluZyBPciBIYXNSdW5Ub29Mb25nKGFsb2csIkNvcHlEb2NzIikpCgkJCQkJCQlE
b25lQ291bnQgPSBEb25lQ291bnQgKyBVcGRhdGVPbmUoIGVudC5Eb2N1bWVudCwgTG9va3VwRG9j
SUQsIGFsb2cgKQoJCQkJCQkJU2V0IGVudCA9IGVudHJpZXMuR2V0UHJldkVudHJ5KGVudCkgJ21v
dmluZyB0b3dhcmRzIHRoZSBuZXdlciBkb2NzCgkJCQkJCVdlbmQKCQkJCQlFbmQgSWYgJ25vIGxv
b2t1cCBlaHMgdmlldwoJCQkJRWxzZQoJCQkJCVNldCBjaGFuZ2VkID0gVGFyZ2V0RUhTZGIuR2V0
VmlldygiUmVjZW50Q2hhbmdlc1Zpb2wiKQoJCQkJCWFsb2cubG9nIFRhcmdldEVIU2RiLlRpdGxl
ICYgIiB3YXMgdXAtdG8tZGF0ZSB3aXRoICIgJiBjaGFuZ2VkLmFsbGVudHJpZXMuQ291bnQgJiAi
IGRvY3MiLCBGYWxzZQoJCQkJRW5kIElmICd3b3JrIHRvIGRvCgkJCUVuZCBJZiAnbm8gZW50cmll
cyBpbiBWaW9sYXRpb25zCgkJRW5kIElmICcgJ25vIGNoYW5nZXMgdmlldyBpbiBWaW9sCgkJYWxv
Zy5sb2cgImNvcGllZCAiICYgRG9uZUNvdW50ICYgIiBkb2NzIiwgRmFsc2UKCQlBdHRhY2hUb1Bh
cmVudCBOb3RoaW5nLE5vdGhpbmcsYWxvZywtMSAndGhpcyBkb2VzbnQgYXR0YWNoIGFueXRoaW5n
LCBqdXN0IGxvZ3MgdGhlIHRvdGFsCglFbmQgSWYgJ25vIGNoYW5nZXMgdmlldyBpbiBFSFMKCQoJ
Q29weURvY3MgPSBEb25lQ291bnQKCQpieWU6CglFeGl0IEZ1bmN0aW9uCgkKZXJyb3J0cmFwOgoJ
YWxvZy5sb2d3YXJuaW5nICJMaW5lICMiICYgRXJsICYgIiBvZiBDb3B5RG9jcyBoYXMgZXJyb3Ig
IyIgJiBFcnIgJiAiIGFuZCB0aGlzIGVycm9yIG1lc3NhZ2U6ICIgJiBFcnJvciwgVHJ1ZQoJQ29w
eURvY3MgPSAtRG9uZUNvdW50CglSZXN1bWUgYnllCgkKRW5kIEZ1bmN0aW9uCgonKytMb3R1c1Nj
cmlwdCBEZXZlbG9wbWVudCBFbnZpcm9ubWVudDoyOjE6R2V0RG9jQnlJRDoxOjgKUHJpdmF0ZSBG
dW5jdGlvbiBHZXREb2NCeUlEKERCIEFzIE5vdGVzRGF0YWJhc2UsIERvY0lEIEFzIFN0cmluZywg
Rm9ybU5hbWUgQXMgU3RyaW5nLCBhc2RmIEFzIEFnZW50TG9nZ2VyKSBBcyBOb3Rlc0RvY3VtZW50
CgkKJVJFTQoJRnVuY3Rpb24gR2V0RG9jQnlJRAoJRGVzY3JpcHRpb246IEdpdmVuIGEgZG9jdW1l
bnRJRCwgZG9lcyBhIGxvb2t1cCB0byBmaW5kIGRvY3Mgd2l0aCB0aGF0IElELiAKCUlmIHRoZXJl
IGlzIG9ubHkgb25lIChub3JtYWwpIGl0IHJldHVybnMgaXQKCUlmIHRoZXJlIGFyZSBtb3JlIHRo
YW4gb25lLCBpdCByZXR1cm5zIHRoZSBmaXJzdCBvbmUuCiVFTkQgUkVNCgkKCURpbSBMb29rdXBW
aWV3IEFzIE5vdGVzVmlldwoJRGltIERvYyBBcyBOb3Rlc0RvY3VtZW50CglEaW0gRHVwbGljYXRl
cyBBcyBOb3Rlc0RvY3VtZW50Q29sbGVjdGlvbgoJCglJZiBOb3QgQ3Jhc2hPbkVycm9ycyBUaGVu
IE9uIEVycm9yIEdvdG8gZXJyb3J0cmFwCgkKCUlmIE5vdCBEQiBJcyBOb3RoaW5nIFRoZW4gCgkJ
U2V0IExvb2t1cFZpZXcgPSBEQi5HZXRWaWV3KCIoRG9jdW1lbnRJRExvb2t1cCkiKQoJCUlmIExv
b2t1cFZpZXcgSXMgTm90aGluZyBUaGVuCgkJCWFzZGYubG9nd2FybmluZyAiVGhlcmUgaXMgbm8g
RG9jSUQgbG9va3VwIHZpZXcgaW4gIiAmIGRiLlRpdGxlLCBUcnVlCgkJRWxzZQoJCQlTZXQgRHVw
bGljYXRlcyA9IExvb2t1cFZpZXcuR2V0YWxsZG9jdW1lbnRzYnlrZXkoRG9jSUQsVHJ1ZSkKCQkJ
SWYgRHVwbGljYXRlcy5Db3VudCA+IDEgVGhlbiBhc2RmLmxvZ3dhcm5pbmcgRHVwbGljYXRlcy5D
b3VudCAmICIgRHVwbGljYXRlIG9mIFsiICYgRG9jSUQgJiAiXSBpbiAiICYgZGIuVGl0bGUsIFRy
dWUKCQkJU2V0IERvYyA9IExvb2t1cFZpZXcuR2V0RG9jdW1lbnRCeUtleShEb2NJRCkKCQkJYXNk
Zi5JbmNyZW1lbnREb2N1bWVudHNSZWFkCgkJCUlmIE5vdCBEb2MgSXMgTm90aGluZyBUaGVuCgkJ
CQlJZiBGb3JtTmFtZSA8PiAiIiBBbmQgTGNhc2UoRG9jLkZvcm0oMCkpIDw+IExjYXNlKEZvcm1O
YW1lKSBUaGVuIFNldCBEb2MgPSBOb3RoaW5nICd3ZSBjb3VsZCBjaGVjayBmb3IgdGhlIHJpZ2h0
IGZvcm0gaW4gdGhlIGR1cGxpY2F0ZXMgY29sbGVjdGlvbgoJCQlFbmQgSWYgJ25vIGRvYz8KCQlF
bmQgSWYgJ25vIGxvb2t1cCB2aWV3CglFbmQgSWYgJ25vIGRiCgkKYnllOgoJU2V0IEdldERvY0J5
SUQgPSBEb2MKCUV4aXQgRnVuY3Rpb24KCQplcnJvcnRyYXA6Cglhc2RmLmxvZ3dhcm5pbmcgIkxp
bmUgIyIgJiBFcmwgJiAiIG9mIEdldERvY0J5SUQgaGFzIHRoaXMgZXJyb3IgIzogICIgJiBFcnIg
JiAiICBhbmQgdGhpcyBlcnJvcjogICIgJiBFcnJvciwgVHJ1ZQoJUmVzdW1lIGJ5ZQoJCkVuZCBG
dW5jdGlvbgoKCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6MjpEZWxl
dGVTdGFsZUZvbGRlcnM6MTo4ClByaXZhdGUgU3ViIERlbGV0ZVN0YWxlRm9sZGVycyggZGIgQXMg
Tm90ZXNEYXRhYmFzZSwgYWxnIEFzIEFnZW50TG9nZ2VyICkKJVJFTQoJU3ViIERlbGV0ZVN0YWxl
Zm9sZGVycwoJRGVzY3JpcHRpb246IHJlbW92ZSB0ZW1wb3JhcnkgZm9sZGVycyB0aGF0IHdlcmUg
bm90IGRlbGV0ZWQgYnkgaW5zcGVjdGlvbiBjbG9zZSBjb2RlIChpLmUuIGRlc2t0b25lIHNlc3Np
b24gdGltZWQgb3V0KQolRU5EIFJFTQoJCglEaW0gZiBBcyBOb3Rlc1ZpZXcKCURpbSBPbGRGb2xk
ZXJzICgpIEFzIE5vdGVzVmlldwoJRGltIE9sZENvdW50IEFzIEludGVnZXIKCURpbSBub3RPbGQg
QXMgSW50ZWdlcgoJRGltIGN1dG9mZiBBcyBWYXJpYW50ICdvZiB0eXBlIGRhdGV0aW1lCglEaW0g
dmlld2NvbGxlY3Rpb24gQXMgVmFyaWFudAoJCQoJSWYgTm90IENyYXNoT25FcnJvcnMgVGhlbiBP
biBFcnJvciBHb3RvIGVycm9ydHJhcAoJT24gRXJyb3IgNDAwNSBSZXN1bWUgTmV4dAoJCgljdXRv
ZmYgPSBOb3cgLSAzCglJZiBOb3QgZGIgSXMgTm90aGluZyBUaGVuCgkJYWxnLmxvZyAiZ2V0dGlu
ZyB2aWV3cyIsIEZhbHNlCgkJdmlld2NvbGxlY3Rpb24gPSBkYi5WaWV3cwoJCWFsZy5sb2cgImNo
ZWNraW5nICIgJiBVYm91bmQodmlld2NvbGxlY3Rpb24pICYgIiB2aWV3cyIsIEZhbHNlCgkJRm9y
YWxsIHZpZXcgSW4gdmlld2NvbGxlY3Rpb24gCgkJCVNldCBmID0gdmlldwoJCQlJZiBFcnIgPD4g
NDAwNSBUaGVuCgkJCQlhbGcuSW5jcmVtZW50RG9jdW1lbnRzUmVhZAoJCQkJSWYgZi5Jc2ZvbGRl
ciBUaGVuCgkJCQkJSWYgTGVmdCggZi5OYW1lLCAxOSApID0gIlZpb2xhdGlvbiBTZWN0aW9uMlwi
IEFuZCBMZW4oIGYuTmFtZSApID4gMjUgVGhlbiAnMjUgd2FzIGtpbmRhIGFyYml0cmFyeQoJCQkJ
CQlJZiBmLkxhc3Rtb2RpZmllZCA8IEN1dG9mZiBUaGVuCgkJCQkJCQlSZWRpbSBQcmVzZXJ2ZSBP
bGRGb2xkZXJzIChPbGRDb3VudCkgQXMgTm90ZXNWaWV3CgkJCQkJCQlTZXQgT2xkRm9sZGVycyhP
bGRDb3VudCkgPSBmCgkJCQkJCQlPbGRDb3VudCA9IE9sZENvdW50ICsgMQoJCQkJCQlFbHNlCgkJ
CQkJCQlub3RPbGQgPSBub3RPbGQgKyAxCgkJCQkJCUVuZCBJZiAnbGFzdCBtb2QKCQkJCQlFbmQg
SWYgJ25hbWUKCQkJCUVuZCBJZiAnaXNmb2xkZXIKCQkJRW5kIElmICdlcnIgNDAwNQoJCUVuZCBG
b3JhbGwKCQlJZiBPbGRDb3VudCArIG5vdE9sZCA+IDAgVGhlbiAKCQkJYWxnLmxvZyAiRm91bmQg
IiAmIE9sZENvdW50ICYgIiBleHBpcmVkIGZvbGRlcnMsIGFuZCAiICYgbm90T2xkICYgIiBub3Qg
c28gb2xkIGZvbGRlcnMiLCBGYWxzZQoJCUVsc2UKCQkJYWxnLmxvZyAibm8gZm9sZGVycyEiLCBG
YWxzZQoJCUVuZCBJZgoJCUZvciBub3RPbGQgPSAwIFRvIE9sZENvdW50LTEKCQkJT2xkRm9sZGVy
cyhub3RPbGQpLlJlbW92ZQoJCQlhbGcuSW5jcmVtZW50RG9jdW1lbnRzRGVsZXRlZAoJCU5leHQK
CUVuZCBJZiAnbm8gZGF0YWJhc2UhCgkKYnllOgoJRXhpdCBTdWIKCQplcnJvcnRyYXA6CglhbGcu
bG9nd2FybmluZyAiTGluZSAjIiAmIEVybCAmICIgb2YgRGVsZXRlU3RhbGVmb2xkZXJzIGhhcyB0
aGlzIGVycm9yICMiICYgRXJyICYgIiBhbmQgdGhpcyBlcnJvciBtZXNzYWdlOiAiICYgRXJyb3Is
IFRydWUKCVJlc3VtZSBieWUKCQpFbmQgU3ViCgonKytMb3R1c1NjcmlwdCBEZXZlbG9wbWVudCBF
bnZpcm9ubWVudDoyOjE6T3BlbkRiQnlSZXBJZDoxOjgKUHJpdmF0ZSBGdW5jdGlvbiBPcGVuRGJC
eVJlcElkKCBTZXJ2ZXIgQXMgU3RyaW5nLCByZXBpZCBBcyBTdHJpbmcsIGxnIEFzIEFnZW50TG9n
Z2VyICkgQXMgIE5vdGVzRGF0YWJhc2UKJVJFTQoJRnVuY3Rpb24gT3BlbkRiQnlSZXBJZAoJRGVz
Y3JpcHRpb246IAolRU5EIFJFTQoJCglEaW0gZGIgQXMgTmV3IE5vdGVzRGF0YWJhc2UoICIiLCAi
IiApCglEaW0gUmVwbGljYUlEIEFzIFN0cmluZwoJCglJZiBMZW4ocmVwaWQpID0gMTcgVGhlbgoJ
CVJlcGxpY2FJRCA9IExlZnQkKHJlcGlkLDgpICYgUmlnaHQkKHJlcGlkLDgpCglFbHNlCgkJUmVw
bGljYUlEID0gcmVwaWQKCUVuZCBJZgoJCglJZiBOb3QgQ3Jhc2hPbkVycm9ycyBUaGVuIE9uIEVy
cm9yIEdvdG8gZXJyb3J0cmFwCgkKCVNldCBPcGVuRGJCeVJlcElkID0gTm90aGluZwoJSWYgTGVu
KFJlcGxpY2FJRCkgPSAxNiBUaGVuCgkJSWYgZGIub3BlbmJ5cmVwbGljYWlkKCBTZXJ2ZXIsIHJl
cGxpY2FpZCApIFRoZW4gJ2RhdGFiYXNlIGRpZCBvcGVuCgkJCVNldCBPcGVuRGJCeVJlcElkID0g
ZGIKCQlFbHNlICdub3cgaXQgaXMgYSBwcm9ibGVtCgkJCUlmIFNlcnZlciA9ICIiIFRoZW4gU2Vy
dmVyID0gIkxvY2FsIgoJCQlsZy5sb2d3YXJuaW5nICJmYWlsZWQgdG8gb3BlbiIgJiByZXBpZCAm
ICIgb24gIiAmIFNlcnZlciwgRmFsc2UKCQlFbmQgSWYKCUVsc2UKCQlsZy5sb2d3YXJuaW5nICJJ
bnZhbGlkIHJlcGxpY2FJRCAiICYgUmVwaWQsIEZhbHNlCglFbmQgSWYgJ2xvb2tpZSBub3RoaW5n
CgkKYnllOgoJRXhpdCBGdW5jdGlvbgoJCmVycm9ydHJhcDoKCWxnLmxvZ3dhcm5pbmcgIkxpbmUg
IyIgJiBFcmwgJiAiIG9mIE9wZW5EYkJ5UmVwSWQgaGFzIHRoaXMgZXJyb3IgIzogICIgJiBFcnIg
JiAiICBhbmQgdGhpcyBlcnJvciBtZXNzYWdlOiAiICYgRXJyb3IsIFRydWUKCVJlc3VtZSBieWUK
CQpFbmQgRnVuY3Rpb24KCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6
MTpVcGRhdGVPbmU6MTo4ClByaXZhdGUgRnVuY3Rpb24gVXBkYXRlT25lKCBTcmNEb2MgQXMgTm90
ZXNEb2N1bWVudCwgTG9va3VwRG9jSUQgQXMgTm90ZXNWaWV3LCBhbG9nIEFzIEFnZW50TG9nZ2Vy
ICkgQXMgTG9uZwolUkVNCglTdWIgVXBkYXRlT25lCglEZXNjcmlwdGlvbjogVXBkYXRlcyBvbmUg
ZG9jIGluIEVIUyBmcm9tIENmZ0N0cgolRU5EIFJFTQoJCglEaW0gVHJndERvYyBBcyBOb3Rlc0Rv
Y3VtZW50CglEaW0gVHJnRGIgQXMgTm90ZXNEYXRhYmFzZQoJRGltIGRvY2lkIEFzIFN0cmluZwoJ
CglJZiBOb3QgQ3Jhc2hPbkVycm9ycyBUaGVuIE9uIEVycm9yIEdvdG8gZXJyb3J0cmFwCgkKCVVw
ZGF0ZU9uZSA9IDAKCWFsb2cuSW5jcmVtZW50RG9jdW1lbnRzUmVhZAoJZG9jaWQgPSBTcmNEb2Mu
RG9jdW1lbnRJRCgwKQoJU2V0IFRyZ3REb2MgPSBMb29rdXBEb2NJRC5HZXRkb2N1bWVudGJ5a2V5
KGRvY2lkLFRydWUpCglJZiBUcmd0RG9jIElzIE5vdGhpbmcgVGhlbiAKCQlJZiBJc2RhdGUoU3Jj
RG9jLkRlbGV0ZWQoMCkpIFRoZW4gJ2RvbnQgbWFrZSBkZWxldGVkIGRvY3MKCQkJJ25vLCBkb250
IGV2ZW4gdGFsayBhYm91dCBpdAoJCQknYWxvZy5sb2cgIm5vdCBtYWtpbmcgZGVsZXRlZCBkb2Mg
IiAmIGRvY0lELCBmYWxzZQoJCUVsc2UKCQkJU2V0IFRyZ0RiID0gTG9va3VwRG9jSUQuUGFyZW50
CgkJCVNldCBUcmd0RG9jID0gTWFrZU5ld0RvYyhUcmdEYixTcmNEb2MsYWxvZywwKQoJCQlJZiBU
cmd0RG9jIElzIE5vdGhpbmcgVGhlbgoJCQkJYWxvZy5sb2cgImNvdWxkIG5vdCBtYWtlIHRhcmdl
dCBkb2MiICYgZG9jaWQsIFRydWUKCQkJRW5kIElmCgkJRW5kIElmICdkZWxldGVkCglFbHNlICd1
cGRhdGUKCQlhbG9nLkluY3JlbWVudERvY3VtZW50c1JlYWQKCQlTcmNEb2MuQ29weWFsbGl0ZW1z
IFRyZ3REb2MsVHJ1ZSAnZG9lcyB0aGlzIG1lc3MgdXAgcGFyZW50IGlkPwoJCVRyZ3REb2MuVXBk
YXRlZCA9IE5vdwoJRW5kIElmICd0YXJnZXRkb2MgPyBub3RoaW5nCglJZiBOb3QgVHJndERvYyBJ
cyBOb3RoaW5nIFRoZW4KCQlJZiBJc2RhdGUoU3JjRG9jLkRlbGV0ZWQoMCkpIFRoZW4gJ2RvIGEg
aGFyZCBkZWxldGUgaW4gRUhTIHdoZW4gZG9jcyBhcmUgc29mdCBkZWxldGVkIGluIGNvbmZpZwoJ
CQlJZiBOb3QgVGVzdE1vZGUgVGhlbiBUcmd0RG9jLlJlbW92ZSBUcnVlCgkJCWFsb2cuSW5jcmVt
ZW50RG9jdW1lbnRzRGVsZXRlZAoJCUVsc2UJCQkJCQkJCgkJCWFsb2cuSW5jcmVtZW50RG9jdW1l
bnRzTW9kaWZpZWQKCQkJSWYgVGVzdE1vZGUgVGhlbgoJCQkJVXBkYXRlT25lID0gMQoJCQlFbHNl
aWYgVHJndERvYy5zYXZlKFRydWUsVHJ1ZSkgVGhlbgoJCQkJVXBkYXRlT25lID0gMQoJCQlFbHNl
CgkJCQlhbG9nLmxvZyAiU2F2ZSBmYWlsZWQhIChpbiBVcGRhdGUpIiAmIGRvY2lkLCBUcnVlCgkJ
CUVuZCBJZiAnc2F2ZQoJCUVuZCBJZidkZWxldGVkCglFbmQgSWYgJ3N0aWxsIG5vdGhpbmcKCQpi
eWU6CglFeGl0IEZ1bmN0aW9uCgkKZXJyb3J0cmFwOgoJYWxvZy5sb2d3YXJuaW5nICJMaW5lICMi
ICYgRXJsICYgIiBvZiBVcGRhdGVPbmUgaGFzIHRoaXMgZXJyb3IgIzogICIgJiBFcnIgJiAiICBh
bmQgdGhpcyBlcnJvciBtZXNzYWdlOiAiICYgRXJyb3IsIFRydWUKCVJlc3VtZSBieWUKCQpFbmQg
RnVuY3Rpb24KCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6MTpIYXNS
dW5Ub29Mb25nOjE6OApQcml2YXRlIEZ1bmN0aW9uIEhhc1J1blRvb0xvbmcoIHNheSBBcyBBZ2Vu
dExvZ2dlciwgd2hvIEFzIFN0cmluZyApIEFzIEJvb2xlYW4KCSVSRU0KCUZ1bmN0aW9uIEhhc1J1
bnRvb0xvbmcKCURlc2NyaXB0aW9uOiBDb21tZW50cyBmb3IgRnVuY3Rpb24KCSVFTkQgUkVNCgkK
CUlmIE5vdCBDcmFzaE9uRXJyb3JzIFRoZW4gT24gRXJyb3IgR290byBlcnJvcnRyYXAKCQoJU3Rh
dGljIHN0YXJ0dGltZSBBcyBub3Rlc2RhdGV0aW1lCglDb25zdCBUb29Mb25nID0gTWF4VGltZVBl
clJ1bgoJRGltIGN1cnJlbnQgQXMgTmV3IE5vdGVzRGF0ZVRpbWUoIE5vdyApCgkKCUlmIHN0YXJ0
dGltZSBJcyBOb3RoaW5nIFRoZW4KCQlTZXQgc3RhcnR0aW1lID0gTmV3IE5vdGVzRGF0ZVRpbWUo
IE5vdyApCglFbmQgSWYKCQoJSWYgQWJzKCBjdXJyZW50LlRpbWVkaWZmZXJlbmNlKHN0YXJ0dGlt
ZSkgKSA+IFRvb2xvbmcgVGhlbgoJCXNheS5sb2cgIiAtLSBEZWNpZGVkIHRoaW5ncyBoYXZlIGdv
bmUgb24gZ29pbmcgb24gZm9yIHRvbyBsb25nIGluICIgJiB3aG8sIEZhbHNlCgkJSGFzUnVuVG9v
TG9uZyA9IFRydWUKCUVsc2UKCQlIYXNSdW5Ub29Mb25nID0gRmFsc2UKCUVuZCBJZgoJCmJ5ZToK
CUV4aXQgRnVuY3Rpb24KCQplcnJvcnRyYXA6CglzYXkubG9nd2FybmluZyAiTGluZSAjIiAmIEVy
bCAmICIgb2YgSGFzUnVuVG9vTG9uZygpIGhhcyB0aGlzIGVycm9yICM6ICAiICYgRXJyICYgIiAg
YW5kIHRoaXMgZXJyb3I6ICAiICYgRXJyb3IsIFRydWUKCVJlc3VtZSBieWUKCQpFbmQgRnVuY3Rp
b24KCicrK0xvdHVzU2NyaXB0IERldmVsb3BtZW50IEVudmlyb25tZW50OjI6MTpOZWVkc0Z1bGxS
dW46MTo4ClByaXZhdGUgRnVuY3Rpb24gTmVlZHNGdWxsUnVuKCB3aGF0ZGIgQXMgU3RyaW5nLCBo
b3dPZnRlbiBBcyBJbnRlZ2VyLCBwbHVzV2hhdCBBcyBJbnRlZ2VyLCBzYXkgQXMgQWdlbnRMb2dn
ZXIgKSBBcyBCb29sZWFuCgklUkVNCglGdW5jdGlvbiBOZWVkc0Z1bGxSdW4KCURlc2NyaXB0aW9u
OiBjb21wYXJlcyBhIGhhc2ggb2YgdGhlIGRhdGFiYXNlJ3MgcmVwbGljYSBJRCB0byB0b2RheQoJ
JUVORCBSRU0KCQoJRGltIEFzTnVtYiBBcyBMb25nCglEaW0gaSBBcyBJbnRlZ2VyCgkKCUlmIE5v
dCBDcmFzaE9uRXJyb3JzIFRoZW4gT24gRXJyb3IgR290byBlcnJvcnRyYXAKCQoJRm9yIGkgPSAx
IFRvIDMyCgkJQXNOdW1iID0gQXNOdW1iICsgVmFsKCAiJmgiICYgTWlkJCggd2hhdGRiLCBpLCAx
ICkgKQoJTmV4dAoJaSA9IChBc051bWIgKyBwbHVzV2hhdCkgTW9kIGhvd09mdGVuCglOZWVkc0Z1
bGxSdW4gPSBpID0gKERheSggTm93ICkgTW9kIGhvd09mdGVuKQoJCmJ5ZToKCUV4aXQgRnVuY3Rp
b24KCQplcnJvcnRyYXA6CglzYXkubG9nd2FybmluZyAiTGluZSAjIiAmIEVybCAmICIgb2YgTmVl
ZHNGdWxsUnVuIGhhcyB0aGlzIGVycm9yICM6ICAiICYgRXJyICYgIiAgYW5kIHRoaXMgZXJyb3I6
ICAiICYgRXJyb3IsIFRydWUKCVJlc3VtZSBieWUKCQpFbmQgRnVuY3Rpb24A
</rawitemdata></item>
<item name='$AssistType' sign='true'><number>65413</number></item>
<item name='$AssistFlags' sign='true'><text>sE</text></item>
<item name='$AssistInfo' sign='true'>
<rawitemdata type='11'>
AgAEAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
</rawitemdata></item>
<item name='$AssistQuery' sign='true'>
<rawitemdata type='f'>
gQYAAAAA
</rawitemdata></item>
<item name='$AssistLastRun' sign='true'>
<rawitemdata type='400'>
AAAAAAAAAAA=
</rawitemdata></item>
<item name='$AssistDocCount' sign='true'><number>0</number></item>
<item name='$AssistRunInfo' summary='true'>
<rawitemdata type='3'>
CAAAAgAACAD6BgAARUwAAAAAAQAAAAAAAAAAAAAA
</rawitemdata></item>
<item name='$Flags'><text>3fL</text></item>
<item name='$FlagsExt' sign='true'><text/></item>
<item name='DXLREFRESH'><text>01Mar2013 16:40 JCOE-94LMTP old date unknown for AGENT UpdateViolations</text></item>
<item name='$POID'><datetime>20130301T164042,99-08</datetime></item></note>

